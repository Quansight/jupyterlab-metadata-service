
// see: https://github.com/Cardinal90/graphql-union-input-type/issues/9

const {
  GraphQLObjectType,
  GraphQLList,
  GraphQLString,
  GraphQLBoolean,
  GraphQLInt,
  GraphQLFloat,
  GraphQLInputObjectType
} = require('graphql');

const { makeExecutableSchema } = require('apollo-server');
const UnionInputType = require('graphql-union-input-type');
let schema;

/* input types definition */

const DatasetInput = new GraphQLInputObjectType({
  name: 'DatasetInput',
  fields: () => ({
    distribution: { type: GraphQLList(DataDownload) },
    includedInDataCatalog: { type: GraphQLList(DataCatalog) },
    issn: { type: GraphQLList(GraphQLString) },
    measurementTechnique: { type: GraphQLList(GraphQLString) },
    variableMeasured: { type: GraphQLList(GraphQLString) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const ProductInput = new GraphQLInputObjectType({
  name: 'ProductInput',
  fields: () => ({
    additionalProperty: { type: GraphQLList(GraphQLString) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    audience: { type: GraphQLList(Audience) },
    award: { type: GraphQLList(GraphQLString) },
    brand: { type: GraphQLList(brand) },
    category: { type: GraphQLList(category) },
    color: { type: GraphQLList(GraphQLString) },
    depth: { type: GraphQLList(depth) },
    gtin12: { type: GraphQLList(GraphQLString) },
    gtin13: { type: GraphQLList(GraphQLString) },
    gtin14: { type: GraphQLList(GraphQLString) },
    gtin8: { type: GraphQLList(GraphQLString) },
    height: { type: GraphQLList(height) },
    isAccessoryOrSparePartFor: { type: GraphQLList(Product) },
    isConsumableFor: { type: GraphQLList(Product) },
    isRelatedTo: { type: GraphQLList(isRelatedTo) },
    isSimilarTo: { type: GraphQLList(isSimilarTo) },
    itemCondition: { type: GraphQLList(OfferItemCondition) },
    logo: { type: GraphQLList(ImageObject) },
    manufacturer: { type: GraphQLList(Organization) },
    material: { type: GraphQLList(Product) },
    model: { type: GraphQLList(ProductModel) },
    mpn: { type: GraphQLList(GraphQLString) },
    nsn: { type: GraphQLList(GraphQLString) },
    offers: { type: GraphQLList(Offer) },
    productID: { type: GraphQLList(GraphQLString) },
    productionDate: { type: GraphQLList(GraphQLString) },
    purchaseDate: { type: GraphQLList(GraphQLString) },
    releaseDate: { type: GraphQLList(GraphQLString) },
    review: { type: GraphQLList(Review) },
    sku: { type: GraphQLList(GraphQLString) },
    slogan: { type: GraphQLList(GraphQLString) },
    weight: { type: GraphQLList(QuantitativeValue) },
    width: { type: GraphQLList(width) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const ActionInput = new GraphQLInputObjectType({
  name: 'ActionInput',
  fields: () => ({
    actionStatus: { type: GraphQLList(ActionStatusType) },
    agent: { type: GraphQLList(agent) },
    endTime: { type: GraphQLList(GraphQLString) },
    error: { type: GraphQLList(Thing) },
    instrument: { type: GraphQLList(Thing) },
    location: { type: GraphQLList(location) },
    object: { type: GraphQLList(Thing) },
    participant: { type: GraphQLList(participant) },
    result: { type: GraphQLList(Thing) },
    startTime: { type: GraphQLList(GraphQLString) },
    target: { type: GraphQLList(EntryPoint) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const EntryPointInput = new GraphQLInputObjectType({
  name: 'EntryPointInput',
  fields: () => ({
    actionApplication: { type: GraphQLList(SoftwareApplication) },
    actionPlatform: { type: GraphQLList(GraphQLString) },
    contentType: { type: GraphQLList(GraphQLString) },
    encodingType: { type: GraphQLList(GraphQLString) },
    httpMethod: { type: GraphQLList(GraphQLString) },
    urlTemplate: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const ThingInput = new GraphQLInputObjectType({
  name: 'ThingInput',
  fields: () => ({
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const ServiceInput = new GraphQLInputObjectType({
  name: 'ServiceInput',
  fields: () => ({
    aggregateRating: { type: GraphQLList(AggregateRating) },
    areaServed: { type: GraphQLList(areaServed) },
    audience: { type: GraphQLList(Audience) },
    availableChannel: { type: GraphQLList(ServiceChannel) },
    award: { type: GraphQLList(GraphQLString) },
    brand: { type: GraphQLList(brand) },
    broker: { type: GraphQLList(broker) },
    category: { type: GraphQLList(category) },
    hasOfferCatalog: { type: GraphQLList(OfferCatalog) },
    hoursAvailable: { type: GraphQLList(OpeningHoursSpecification) },
    isRelatedTo: { type: GraphQLList(isRelatedTo) },
    isSimilarTo: { type: GraphQLList(isSimilarTo) },
    logo: { type: GraphQLList(ImageObject) },
    offers: { type: GraphQLList(Offer) },
    provider: { type: GraphQLList(provider) },
    providerMobility: { type: GraphQLList(GraphQLString) },
    review: { type: GraphQLList(Review) },
    serviceOutput: { type: GraphQLList(Thing) },
    serviceType: { type: GraphQLList(GraphQLString) },
    slogan: { type: GraphQLList(GraphQLString) },
    termsOfService: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const AdministrativeAreaInput = new GraphQLInputObjectType({
  name: 'AdministrativeAreaInput',
  fields: () => ({
    additionalProperty: { type: GraphQLList(GraphQLString) },
    address: { type: GraphQLList(PostalAddress) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    amenityFeature: { type: GraphQLList(LocationFeatureSpecification) },
    branchCode: { type: GraphQLList(GraphQLString) },
    containedInPlace: { type: GraphQLList(Place) },
    containsPlace: { type: GraphQLList(Place) },
    event: { type: GraphQLList(Event) },
    faxNumber: { type: GraphQLList(GraphQLString) },
    geo: { type: GraphQLList(geo) },
    geoContains: { type: GraphQLList(geoContains) },
    geoCoveredBy: { type: GraphQLList(geoCoveredBy) },
    geoCovers: { type: GraphQLList(geoCovers) },
    geoCrosses: { type: GraphQLList(geoCrosses) },
    geoDisjoint: { type: GraphQLList(geoDisjoint) },
    geoEquals: { type: GraphQLList(geoEquals) },
    geoIntersects: { type: GraphQLList(geoIntersects) },
    geoOverlaps: { type: GraphQLList(geoOverlaps) },
    geoTouches: { type: GraphQLList(geoTouches) },
    geoWithin: { type: GraphQLList(geoWithin) },
    globalLocationNumber: { type: GraphQLList(GraphQLString) },
    hasMap: { type: GraphQLList(Map) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isicV4: { type: GraphQLList(GraphQLString) },
    logo: { type: GraphQLList(ImageObject) },
    maximumAttendeeCapacity: { type: GraphQLList(GraphQLInt) },
    openingHoursSpecification: { type: GraphQLList(OpeningHoursSpecification) },
    photo: { type: GraphQLList(photo) },
    publicAccess: { type: GraphQLList(GraphQLBoolean) },
    review: { type: GraphQLList(Review) },
    slogan: { type: GraphQLList(GraphQLString) },
    smokingAllowed: { type: GraphQLList(GraphQLBoolean) },
    specialOpeningHoursSpecification: { type: GraphQLList(OpeningHoursSpecification) },
    telephone: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const LocationFeatureSpecificationInput = new GraphQLInputObjectType({
  name: 'LocationFeatureSpecificationInput',
  fields: () => ({
    hoursAvailable: { type: GraphQLList(OpeningHoursSpecification) },
    validFrom: { type: GraphQLList(GraphQLString) },
    validThrough: { type: GraphQLList(GraphQLString) },
    maxValue: { type: GraphQLList(GraphQLFloat) },
    measurementTechnique: { type: GraphQLList(GraphQLString) },
    minValue: { type: GraphQLList(GraphQLFloat) },
    propertyID: { type: GraphQLList(GraphQLString) },
    unitCode: { type: GraphQLList(GraphQLString) },
    unitText: { type: GraphQLList(GraphQLString) },
    value: { type: GraphQLList(StructuredValue) },
    valueReference: { type: GraphQLList(valueReference) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const VideoObjectInput = new GraphQLInputObjectType({
  name: 'VideoObjectInput',
  fields: () => ({
    actor: { type: GraphQLList(Person) },
    caption: { type: GraphQLList(MediaObject) },
    director: { type: GraphQLList(Person) },
    musicBy: { type: GraphQLList(musicBy) },
    thumbnail: { type: GraphQLList(ImageObject) },
    transcript: { type: GraphQLList(GraphQLString) },
    videoFrameSize: { type: GraphQLList(GraphQLString) },
    videoQuality: { type: GraphQLList(GraphQLString) },
    associatedArticle: { type: GraphQLList(NewsArticle) },
    bitrate: { type: GraphQLList(GraphQLString) },
    contentSize: { type: GraphQLList(GraphQLString) },
    contentUrl: { type: GraphQLList(GraphQLString) },
    duration: { type: GraphQLList(Duration) },
    embedUrl: { type: GraphQLList(GraphQLString) },
    encodesCreativeWork: { type: GraphQLList(CreativeWork) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    endTime: { type: GraphQLList(GraphQLString) },
    height: { type: GraphQLList(height) },
    playerType: { type: GraphQLList(GraphQLString) },
    productionCompany: { type: GraphQLList(Organization) },
    regionsAllowed: { type: GraphQLList(Place) },
    requiresSubscription: { type: GraphQLList(MediaSubscription) },
    startTime: { type: GraphQLList(GraphQLString) },
    uploadDate: { type: GraphQLList(GraphQLString) },
    width: { type: GraphQLList(width) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const EventInput = new GraphQLInputObjectType({
  name: 'EventInput',
  fields: () => ({
    about: { type: GraphQLList(Thing) },
    actor: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    attendee: { type: GraphQLList(attendee) },
    audience: { type: GraphQLList(Audience) },
    composer: { type: GraphQLList(composer) },
    contributor: { type: GraphQLList(contributor) },
    director: { type: GraphQLList(Person) },
    doorTime: { type: GraphQLList(GraphQLString) },
    duration: { type: GraphQLList(Duration) },
    endDate: { type: GraphQLList(GraphQLString) },
    eventStatus: { type: GraphQLList(EventStatusType) },
    funder: { type: GraphQLList(funder) },
    inLanguage: { type: GraphQLList(Language) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    location: { type: GraphQLList(location) },
    maximumAttendeeCapacity: { type: GraphQLList(GraphQLInt) },
    offers: { type: GraphQLList(Offer) },
    organizer: { type: GraphQLList(organizer) },
    performer: { type: GraphQLList(performer) },
    previousStartDate: { type: GraphQLList(GraphQLString) },
    recordedIn: { type: GraphQLList(CreativeWork) },
    remainingAttendeeCapacity: { type: GraphQLList(GraphQLInt) },
    review: { type: GraphQLList(Review) },
    sponsor: { type: GraphQLList(sponsor) },
    startDate: { type: GraphQLList(GraphQLString) },
    subEvent: { type: GraphQLList(Event) },
    superEvent: { type: GraphQLList(Event) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    workFeatured: { type: GraphQLList(CreativeWork) },
    workPerformed: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const LanguageInput = new GraphQLInputObjectType({
  name: 'LanguageInput',
  fields: () => ({
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const PhysicalActivityCategoryInput = new GraphQLInputObjectType({
  name: 'PhysicalActivityCategoryInput',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const ProductModelInput = new GraphQLInputObjectType({
  name: 'ProductModelInput',
  fields: () => ({
    isVariantOf: { type: GraphQLList(ProductModel) },
    predecessorOf: { type: GraphQLList(ProductModel) },
    successorOf: { type: GraphQLList(ProductModel) },
    additionalProperty: { type: GraphQLList(GraphQLString) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    audience: { type: GraphQLList(Audience) },
    award: { type: GraphQLList(GraphQLString) },
    brand: { type: GraphQLList(brand) },
    category: { type: GraphQLList(category) },
    color: { type: GraphQLList(GraphQLString) },
    depth: { type: GraphQLList(depth) },
    gtin12: { type: GraphQLList(GraphQLString) },
    gtin13: { type: GraphQLList(GraphQLString) },
    gtin14: { type: GraphQLList(GraphQLString) },
    gtin8: { type: GraphQLList(GraphQLString) },
    height: { type: GraphQLList(height) },
    isAccessoryOrSparePartFor: { type: GraphQLList(Product) },
    isConsumableFor: { type: GraphQLList(Product) },
    isRelatedTo: { type: GraphQLList(isRelatedTo) },
    isSimilarTo: { type: GraphQLList(isSimilarTo) },
    itemCondition: { type: GraphQLList(OfferItemCondition) },
    logo: { type: GraphQLList(ImageObject) },
    manufacturer: { type: GraphQLList(Organization) },
    material: { type: GraphQLList(Product) },
    model: { type: GraphQLList(ProductModel) },
    mpn: { type: GraphQLList(GraphQLString) },
    nsn: { type: GraphQLList(GraphQLString) },
    offers: { type: GraphQLList(Offer) },
    productID: { type: GraphQLList(GraphQLString) },
    productionDate: { type: GraphQLList(GraphQLString) },
    purchaseDate: { type: GraphQLList(GraphQLString) },
    releaseDate: { type: GraphQLList(GraphQLString) },
    review: { type: GraphQLList(Review) },
    sku: { type: GraphQLList(GraphQLString) },
    slogan: { type: GraphQLList(GraphQLString) },
    weight: { type: GraphQLList(QuantitativeValue) },
    width: { type: GraphQLList(width) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const PostalAddressInput = new GraphQLInputObjectType({
  name: 'PostalAddressInput',
  fields: () => ({
    addressCountry: { type: GraphQLList(Country) },
    addressLocality: { type: GraphQLList(GraphQLString) },
    addressRegion: { type: GraphQLList(GraphQLString) },
    postOfficeBoxNumber: { type: GraphQLList(GraphQLString) },
    postalCode: { type: GraphQLList(GraphQLString) },
    streetAddress: { type: GraphQLList(GraphQLString) },
    areaServed: { type: GraphQLList(areaServed) },
    availableLanguage: { type: GraphQLList(Language) },
    contactOption: { type: GraphQLList(ContactPointOption) },
    contactType: { type: GraphQLList(GraphQLString) },
    email: { type: GraphQLList(GraphQLString) },
    faxNumber: { type: GraphQLList(GraphQLString) },
    hoursAvailable: { type: GraphQLList(OpeningHoursSpecification) },
    productSupported: { type: GraphQLList(Product) },
    telephone: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const PlaceInput = new GraphQLInputObjectType({
  name: 'PlaceInput',
  fields: () => ({
    additionalProperty: { type: GraphQLList(GraphQLString) },
    address: { type: GraphQLList(PostalAddress) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    amenityFeature: { type: GraphQLList(LocationFeatureSpecification) },
    branchCode: { type: GraphQLList(GraphQLString) },
    containedInPlace: { type: GraphQLList(Place) },
    containsPlace: { type: GraphQLList(Place) },
    event: { type: GraphQLList(Event) },
    faxNumber: { type: GraphQLList(GraphQLString) },
    geo: { type: GraphQLList(geo) },
    geoContains: { type: GraphQLList(geoContains) },
    geoCoveredBy: { type: GraphQLList(geoCoveredBy) },
    geoCovers: { type: GraphQLList(geoCovers) },
    geoCrosses: { type: GraphQLList(geoCrosses) },
    geoDisjoint: { type: GraphQLList(geoDisjoint) },
    geoEquals: { type: GraphQLList(geoEquals) },
    geoIntersects: { type: GraphQLList(geoIntersects) },
    geoOverlaps: { type: GraphQLList(geoOverlaps) },
    geoTouches: { type: GraphQLList(geoTouches) },
    geoWithin: { type: GraphQLList(geoWithin) },
    globalLocationNumber: { type: GraphQLList(GraphQLString) },
    hasMap: { type: GraphQLList(Map) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isicV4: { type: GraphQLList(GraphQLString) },
    logo: { type: GraphQLList(ImageObject) },
    maximumAttendeeCapacity: { type: GraphQLList(GraphQLInt) },
    openingHoursSpecification: { type: GraphQLList(OpeningHoursSpecification) },
    photo: { type: GraphQLList(photo) },
    publicAccess: { type: GraphQLList(GraphQLBoolean) },
    review: { type: GraphQLList(Review) },
    slogan: { type: GraphQLList(GraphQLString) },
    smokingAllowed: { type: GraphQLList(GraphQLBoolean) },
    specialOpeningHoursSpecification: { type: GraphQLList(OpeningHoursSpecification) },
    telephone: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const AudioObjectInput = new GraphQLInputObjectType({
  name: 'AudioObjectInput',
  fields: () => ({
    caption: { type: GraphQLList(MediaObject) },
    transcript: { type: GraphQLList(GraphQLString) },
    associatedArticle: { type: GraphQLList(NewsArticle) },
    bitrate: { type: GraphQLList(GraphQLString) },
    contentSize: { type: GraphQLList(GraphQLString) },
    contentUrl: { type: GraphQLList(GraphQLString) },
    duration: { type: GraphQLList(Duration) },
    embedUrl: { type: GraphQLList(GraphQLString) },
    encodesCreativeWork: { type: GraphQLList(CreativeWork) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    endTime: { type: GraphQLList(GraphQLString) },
    height: { type: GraphQLList(height) },
    playerType: { type: GraphQLList(GraphQLString) },
    productionCompany: { type: GraphQLList(Organization) },
    regionsAllowed: { type: GraphQLList(Place) },
    requiresSubscription: { type: GraphQLList(MediaSubscription) },
    startTime: { type: GraphQLList(GraphQLString) },
    uploadDate: { type: GraphQLList(GraphQLString) },
    width: { type: GraphQLList(width) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const AlignmentObjectInput = new GraphQLInputObjectType({
  name: 'AlignmentObjectInput',
  fields: () => ({
    alignmentType: { type: GraphQLList(GraphQLString) },
    educationalFramework: { type: GraphQLList(GraphQLString) },
    targetDescription: { type: GraphQLList(GraphQLString) },
    targetName: { type: GraphQLList(GraphQLString) },
    targetUrl: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const CommentInput = new GraphQLInputObjectType({
  name: 'CommentInput',
  fields: () => ({
    downvoteCount: { type: GraphQLList(GraphQLInt) },
    parentItem: { type: GraphQLList(Question) },
    upvoteCount: { type: GraphQLList(GraphQLInt) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const ImageObjectInput = new GraphQLInputObjectType({
  name: 'ImageObjectInput',
  fields: () => ({
    caption: { type: GraphQLList(MediaObject) },
    exifData: { type: GraphQLList(GraphQLString) },
    representativeOfPage: { type: GraphQLList(GraphQLBoolean) },
    thumbnail: { type: GraphQLList(ImageObject) },
    associatedArticle: { type: GraphQLList(NewsArticle) },
    bitrate: { type: GraphQLList(GraphQLString) },
    contentSize: { type: GraphQLList(GraphQLString) },
    contentUrl: { type: GraphQLList(GraphQLString) },
    duration: { type: GraphQLList(Duration) },
    embedUrl: { type: GraphQLList(GraphQLString) },
    encodesCreativeWork: { type: GraphQLList(CreativeWork) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    endTime: { type: GraphQLList(GraphQLString) },
    height: { type: GraphQLList(height) },
    playerType: { type: GraphQLList(GraphQLString) },
    productionCompany: { type: GraphQLList(Organization) },
    regionsAllowed: { type: GraphQLList(Place) },
    requiresSubscription: { type: GraphQLList(MediaSubscription) },
    startTime: { type: GraphQLList(GraphQLString) },
    uploadDate: { type: GraphQLList(GraphQLString) },
    width: { type: GraphQLList(width) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const ActionStatusTypeInput = new GraphQLInputObjectType({
  name: 'ActionStatusTypeInput',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const PersonInput = new GraphQLInputObjectType({
  name: 'PersonInput',
  fields: () => ({
    additionalName: { type: GraphQLList(GraphQLString) },
    address: { type: GraphQLList(PostalAddress) },
    affiliation: { type: GraphQLList(Organization) },
    alumniOf: { type: GraphQLList(alumniOf) },
    award: { type: GraphQLList(GraphQLString) },
    birthDate: { type: GraphQLList(GraphQLString) },
    birthPlace: { type: GraphQLList(Place) },
    brand: { type: GraphQLList(brand) },
    children: { type: GraphQLList(Person) },
    colleague: { type: GraphQLList(Person) },
    contactPoint: { type: GraphQLList(ContactPoint) },
    deathDate: { type: GraphQLList(GraphQLString) },
    deathPlace: { type: GraphQLList(Place) },
    duns: { type: GraphQLList(GraphQLString) },
    email: { type: GraphQLList(GraphQLString) },
    familyName: { type: GraphQLList(GraphQLString) },
    faxNumber: { type: GraphQLList(GraphQLString) },
    follows: { type: GraphQLList(Person) },
    funder: { type: GraphQLList(funder) },
    gender: { type: GraphQLList(GenderType) },
    givenName: { type: GraphQLList(GraphQLString) },
    globalLocationNumber: { type: GraphQLList(GraphQLString) },
    hasOccupation: { type: GraphQLList(Occupation) },
    hasOfferCatalog: { type: GraphQLList(OfferCatalog) },
    hasPOS: { type: GraphQLList(Place) },
    height: { type: GraphQLList(height) },
    homeLocation: { type: GraphQLList(homeLocation) },
    honorificPrefix: { type: GraphQLList(GraphQLString) },
    honorificSuffix: { type: GraphQLList(GraphQLString) },
    isicV4: { type: GraphQLList(GraphQLString) },
    jobTitle: { type: GraphQLList(GraphQLString) },
    knows: { type: GraphQLList(Person) },
    knowsAbout: { type: GraphQLList(Thing) },
    knowsLanguage: { type: GraphQLList(Language) },
    makesOffer: { type: GraphQLList(Offer) },
    memberOf: { type: GraphQLList(memberOf) },
    naics: { type: GraphQLList(GraphQLString) },
    nationality: { type: GraphQLList(Country) },
    netWorth: { type: GraphQLList(netWorth) },
    owns: { type: GraphQLList(owns) },
    parent: { type: GraphQLList(Person) },
    performerIn: { type: GraphQLList(Event) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    relatedTo: { type: GraphQLList(Person) },
    seeks: { type: GraphQLList(Demand) },
    sibling: { type: GraphQLList(Person) },
    sponsor: { type: GraphQLList(sponsor) },
    spouse: { type: GraphQLList(Person) },
    taxID: { type: GraphQLList(GraphQLString) },
    telephone: { type: GraphQLList(GraphQLString) },
    vatID: { type: GraphQLList(GraphQLString) },
    weight: { type: GraphQLList(QuantitativeValue) },
    workLocation: { type: GraphQLList(workLocation) },
    worksFor: { type: GraphQLList(Organization) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const ContactPointInput = new GraphQLInputObjectType({
  name: 'ContactPointInput',
  fields: () => ({
    areaServed: { type: GraphQLList(areaServed) },
    availableLanguage: { type: GraphQLList(Language) },
    contactOption: { type: GraphQLList(ContactPointOption) },
    contactType: { type: GraphQLList(GraphQLString) },
    email: { type: GraphQLList(GraphQLString) },
    faxNumber: { type: GraphQLList(GraphQLString) },
    hoursAvailable: { type: GraphQLList(OpeningHoursSpecification) },
    productSupported: { type: GraphQLList(Product) },
    telephone: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const OccupationInput = new GraphQLInputObjectType({
  name: 'OccupationInput',
  fields: () => ({
    educationRequirements: { type: GraphQLList(EducationalOccupationalCredential) },
    estimatedSalary: { type: GraphQLList(MonetaryAmountDistribution) },
    experienceRequirements: { type: GraphQLList(GraphQLString) },
    occupationLocation: { type: GraphQLList(AdministrativeArea) },
    occupationalCategory: { type: GraphQLList(GraphQLString) },
    qualifications: { type: GraphQLList(EducationalOccupationalCredential) },
    responsibilities: { type: GraphQLList(GraphQLString) },
    skills: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const MonetaryAmountInput = new GraphQLInputObjectType({
  name: 'MonetaryAmountInput',
  fields: () => ({
    currency: { type: GraphQLList(GraphQLString) },
    maxValue: { type: GraphQLList(GraphQLFloat) },
    minValue: { type: GraphQLList(GraphQLFloat) },
    validFrom: { type: GraphQLList(GraphQLString) },
    validThrough: { type: GraphQLList(GraphQLString) },
    value: { type: GraphQLList(StructuredValue) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const EducationalOrganizationInput = new GraphQLInputObjectType({
  name: 'EducationalOrganizationInput',
  fields: () => ({
    alumni: { type: GraphQLList(Person) },
    actionableFeedbackPolicy: { type: GraphQLList(CreativeWork) },
    address: { type: GraphQLList(PostalAddress) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alumni: { type: GraphQLList(Person) },
    areaServed: { type: GraphQLList(areaServed) },
    award: { type: GraphQLList(GraphQLString) },
    brand: { type: GraphQLList(brand) },
    contactPoint: { type: GraphQLList(ContactPoint) },
    correctionsPolicy: { type: GraphQLList(CreativeWork) },
    department: { type: GraphQLList(Organization) },
    dissolutionDate: { type: GraphQLList(GraphQLString) },
    diversityPolicy: { type: GraphQLList(CreativeWork) },
    diversityStaffingReport: { type: GraphQLList(Article) },
    duns: { type: GraphQLList(GraphQLString) },
    email: { type: GraphQLList(GraphQLString) },
    employee: { type: GraphQLList(Person) },
    ethicsPolicy: { type: GraphQLList(CreativeWork) },
    event: { type: GraphQLList(Event) },
    faxNumber: { type: GraphQLList(GraphQLString) },
    founder: { type: GraphQLList(Person) },
    foundingDate: { type: GraphQLList(GraphQLString) },
    foundingLocation: { type: GraphQLList(Place) },
    funder: { type: GraphQLList(funder) },
    globalLocationNumber: { type: GraphQLList(GraphQLString) },
    hasOfferCatalog: { type: GraphQLList(OfferCatalog) },
    hasPOS: { type: GraphQLList(Place) },
    isicV4: { type: GraphQLList(GraphQLString) },
    knowsAbout: { type: GraphQLList(Thing) },
    knowsLanguage: { type: GraphQLList(Language) },
    legalName: { type: GraphQLList(GraphQLString) },
    leiCode: { type: GraphQLList(GraphQLString) },
    location: { type: GraphQLList(location) },
    logo: { type: GraphQLList(ImageObject) },
    makesOffer: { type: GraphQLList(Offer) },
    member: { type: GraphQLList(member) },
    memberOf: { type: GraphQLList(memberOf) },
    naics: { type: GraphQLList(GraphQLString) },
    numberOfEmployees: { type: GraphQLList(QuantitativeValue) },
    ownershipFundingInfo: { type: GraphQLList(ownershipFundingInfo) },
    owns: { type: GraphQLList(owns) },
    parentOrganization: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    review: { type: GraphQLList(Review) },
    seeks: { type: GraphQLList(Demand) },
    slogan: { type: GraphQLList(GraphQLString) },
    sponsor: { type: GraphQLList(sponsor) },
    subOrganization: { type: GraphQLList(Organization) },
    taxID: { type: GraphQLList(GraphQLString) },
    telephone: { type: GraphQLList(GraphQLString) },
    unnamedSourcesPolicy: { type: GraphQLList(CreativeWork) },
    vatID: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const CorrectionCommentInput = new GraphQLInputObjectType({
  name: 'CorrectionCommentInput',
  fields: () => ({
    downvoteCount: { type: GraphQLList(GraphQLInt) },
    parentItem: { type: GraphQLList(Question) },
    upvoteCount: { type: GraphQLList(GraphQLInt) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const BrandInput = new GraphQLInputObjectType({
  name: 'BrandInput',
  fields: () => ({
    aggregateRating: { type: GraphQLList(AggregateRating) },
    logo: { type: GraphQLList(ImageObject) },
    review: { type: GraphQLList(Review) },
    slogan: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const GeoCoordinatesInput = new GraphQLInputObjectType({
  name: 'GeoCoordinatesInput',
  fields: () => ({
    address: { type: GraphQLList(PostalAddress) },
    addressCountry: { type: GraphQLList(Country) },
    elevation: { type: GraphQLList(GraphQLString) },
    latitude: { type: GraphQLList(GraphQLString) },
    longitude: { type: GraphQLList(GraphQLString) },
    postalCode: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const GeoShapeInput = new GraphQLInputObjectType({
  name: 'GeoShapeInput',
  fields: () => ({
    address: { type: GraphQLList(PostalAddress) },
    addressCountry: { type: GraphQLList(Country) },
    box: { type: GraphQLList(GraphQLString) },
    circle: { type: GraphQLList(GraphQLString) },
    elevation: { type: GraphQLList(GraphQLString) },
    line: { type: GraphQLList(GraphQLString) },
    polygon: { type: GraphQLList(GraphQLString) },
    postalCode: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const MapInput = new GraphQLInputObjectType({
  name: 'MapInput',
  fields: () => ({
    mapType: { type: GraphQLList(MapCategoryType) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const QualitativeValueInput = new GraphQLInputObjectType({
  name: 'QualitativeValueInput',
  fields: () => ({
    additionalProperty: { type: GraphQLList(GraphQLString) },
    equal: { type: GraphQLList(QualitativeValue) },
    greater: { type: GraphQLList(QualitativeValue) },
    greaterOrEqual: { type: GraphQLList(QualitativeValue) },
    lesser: { type: GraphQLList(QualitativeValue) },
    lesserOrEqual: { type: GraphQLList(QualitativeValue) },
    nonEqual: { type: GraphQLList(QualitativeValue) },
    valueReference: { type: GraphQLList(valueReference) },
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const MonetaryAmountDistributionInput = new GraphQLInputObjectType({
  name: 'MonetaryAmountDistributionInput',
  fields: () => ({
    currency: { type: GraphQLList(GraphQLString) },
    duration: { type: GraphQLList(Duration) },
    median: { type: GraphQLList(GraphQLFloat) },
    percentile10: { type: GraphQLList(GraphQLFloat) },
    percentile25: { type: GraphQLList(GraphQLFloat) },
    percentile75: { type: GraphQLList(GraphQLFloat) },
    percentile90: { type: GraphQLList(GraphQLFloat) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const SoftwareApplicationInput = new GraphQLInputObjectType({
  name: 'SoftwareApplicationInput',
  fields: () => ({
    applicationCategory: { type: GraphQLList(GraphQLString) },
    applicationSubCategory: { type: GraphQLList(GraphQLString) },
    applicationSuite: { type: GraphQLList(GraphQLString) },
    availableOnDevice: { type: GraphQLList(GraphQLString) },
    countriesNotSupported: { type: GraphQLList(GraphQLString) },
    countriesSupported: { type: GraphQLList(GraphQLString) },
    downloadUrl: { type: GraphQLList(GraphQLString) },
    featureList: { type: GraphQLList(GraphQLString) },
    fileSize: { type: GraphQLList(GraphQLString) },
    installUrl: { type: GraphQLList(GraphQLString) },
    memoryRequirements: { type: GraphQLList(GraphQLString) },
    operatingSystem: { type: GraphQLList(GraphQLString) },
    permissions: { type: GraphQLList(GraphQLString) },
    processorRequirements: { type: GraphQLList(GraphQLString) },
    releaseNotes: { type: GraphQLList(GraphQLString) },
    screenshot: { type: GraphQLList(ImageObject) },
    softwareAddOn: { type: GraphQLList(SoftwareApplication) },
    softwareHelp: { type: GraphQLList(CreativeWork) },
    softwareRequirements: { type: GraphQLList(GraphQLString) },
    softwareVersion: { type: GraphQLList(GraphQLString) },
    storageRequirements: { type: GraphQLList(GraphQLString) },
    supportingData: { type: GraphQLList(DataFeed) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const DataFeedInput = new GraphQLInputObjectType({
  name: 'DataFeedInput',
  fields: () => ({
    dataFeedElement: { type: GraphQLList(dataFeedElement) },
    distribution: { type: GraphQLList(DataDownload) },
    includedInDataCatalog: { type: GraphQLList(DataCatalog) },
    issn: { type: GraphQLList(GraphQLString) },
    measurementTechnique: { type: GraphQLList(GraphQLString) },
    variableMeasured: { type: GraphQLList(GraphQLString) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const DataFeedItemInput = new GraphQLInputObjectType({
  name: 'DataFeedItemInput',
  fields: () => ({
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateDeleted: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    item: { type: GraphQLList(Thing) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const OfferInput = new GraphQLInputObjectType({
  name: 'OfferInput',
  fields: () => ({
    acceptedPaymentMethod: { type: GraphQLList(acceptedPaymentMethod) },
    addOn: { type: GraphQLList(Offer) },
    advanceBookingRequirement: { type: GraphQLList(QuantitativeValue) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    areaServed: { type: GraphQLList(areaServed) },
    availability: { type: GraphQLList(ItemAvailability) },
    availabilityEnds: { type: GraphQLList(GraphQLString) },
    availabilityStarts: { type: GraphQLList(GraphQLString) },
    availableAtOrFrom: { type: GraphQLList(Place) },
    availableDeliveryMethod: { type: GraphQLList(DeliveryMethod) },
    businessFunction: { type: GraphQLList(BusinessFunction) },
    category: { type: GraphQLList(category) },
    deliveryLeadTime: { type: GraphQLList(QuantitativeValue) },
    eligibleCustomerType: { type: GraphQLList(BusinessEntityType) },
    eligibleDuration: { type: GraphQLList(QuantitativeValue) },
    eligibleQuantity: { type: GraphQLList(QuantitativeValue) },
    eligibleRegion: { type: GraphQLList(eligibleRegion) },
    eligibleTransactionVolume: { type: GraphQLList(PriceSpecification) },
    gtin12: { type: GraphQLList(GraphQLString) },
    gtin13: { type: GraphQLList(GraphQLString) },
    gtin14: { type: GraphQLList(GraphQLString) },
    gtin8: { type: GraphQLList(GraphQLString) },
    includesObject: { type: GraphQLList(TypeAndQuantityNode) },
    ineligibleRegion: { type: GraphQLList(ineligibleRegion) },
    inventoryLevel: { type: GraphQLList(QuantitativeValue) },
    itemCondition: { type: GraphQLList(OfferItemCondition) },
    itemOffered: { type: GraphQLList(itemOffered) },
    mpn: { type: GraphQLList(GraphQLString) },
    offeredBy: { type: GraphQLList(offeredBy) },
    price: { type: GraphQLList(GraphQLString) },
    priceCurrency: { type: GraphQLList(GraphQLString) },
    priceSpecification: { type: GraphQLList(PriceSpecification) },
    priceValidUntil: { type: GraphQLList(GraphQLString) },
    review: { type: GraphQLList(Review) },
    seller: { type: GraphQLList(seller) },
    serialNumber: { type: GraphQLList(GraphQLString) },
    sku: { type: GraphQLList(GraphQLString) },
    validFrom: { type: GraphQLList(GraphQLString) },
    validThrough: { type: GraphQLList(GraphQLString) },
    warranty: { type: GraphQLList(WarrantyPromise) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const TypeAndQuantityNodeInput = new GraphQLInputObjectType({
  name: 'TypeAndQuantityNodeInput',
  fields: () => ({
    amountOfThisGood: { type: GraphQLList(GraphQLFloat) },
    businessFunction: { type: GraphQLList(BusinessFunction) },
    typeOfGood: { type: GraphQLList(typeOfGood) },
    unitCode: { type: GraphQLList(GraphQLString) },
    unitText: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const ItemAvailabilityInput = new GraphQLInputObjectType({
  name: 'ItemAvailabilityInput',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const BusinessEntityTypeInput = new GraphQLInputObjectType({
  name: 'BusinessEntityTypeInput',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const PaymentMethodInput = new GraphQLInputObjectType({
  name: 'PaymentMethodInput',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const MediaObjectInput = new GraphQLInputObjectType({
  name: 'MediaObjectInput',
  fields: () => ({
    associatedArticle: { type: GraphQLList(NewsArticle) },
    bitrate: { type: GraphQLList(GraphQLString) },
    contentSize: { type: GraphQLList(GraphQLString) },
    contentUrl: { type: GraphQLList(GraphQLString) },
    duration: { type: GraphQLList(Duration) },
    embedUrl: { type: GraphQLList(GraphQLString) },
    encodesCreativeWork: { type: GraphQLList(CreativeWork) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    endTime: { type: GraphQLList(GraphQLString) },
    height: { type: GraphQLList(height) },
    playerType: { type: GraphQLList(GraphQLString) },
    productionCompany: { type: GraphQLList(Organization) },
    regionsAllowed: { type: GraphQLList(Place) },
    requiresSubscription: { type: GraphQLList(MediaSubscription) },
    startTime: { type: GraphQLList(GraphQLString) },
    uploadDate: { type: GraphQLList(GraphQLString) },
    width: { type: GraphQLList(width) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const OrganizationInput = new GraphQLInputObjectType({
  name: 'OrganizationInput',
  fields: () => ({
    actionableFeedbackPolicy: { type: GraphQLList(CreativeWork) },
    address: { type: GraphQLList(PostalAddress) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alumni: { type: GraphQLList(Person) },
    areaServed: { type: GraphQLList(areaServed) },
    award: { type: GraphQLList(GraphQLString) },
    brand: { type: GraphQLList(brand) },
    contactPoint: { type: GraphQLList(ContactPoint) },
    correctionsPolicy: { type: GraphQLList(CreativeWork) },
    department: { type: GraphQLList(Organization) },
    dissolutionDate: { type: GraphQLList(GraphQLString) },
    diversityPolicy: { type: GraphQLList(CreativeWork) },
    diversityStaffingReport: { type: GraphQLList(Article) },
    duns: { type: GraphQLList(GraphQLString) },
    email: { type: GraphQLList(GraphQLString) },
    employee: { type: GraphQLList(Person) },
    ethicsPolicy: { type: GraphQLList(CreativeWork) },
    event: { type: GraphQLList(Event) },
    faxNumber: { type: GraphQLList(GraphQLString) },
    founder: { type: GraphQLList(Person) },
    foundingDate: { type: GraphQLList(GraphQLString) },
    foundingLocation: { type: GraphQLList(Place) },
    funder: { type: GraphQLList(funder) },
    globalLocationNumber: { type: GraphQLList(GraphQLString) },
    hasOfferCatalog: { type: GraphQLList(OfferCatalog) },
    hasPOS: { type: GraphQLList(Place) },
    isicV4: { type: GraphQLList(GraphQLString) },
    knowsAbout: { type: GraphQLList(Thing) },
    knowsLanguage: { type: GraphQLList(Language) },
    legalName: { type: GraphQLList(GraphQLString) },
    leiCode: { type: GraphQLList(GraphQLString) },
    location: { type: GraphQLList(location) },
    logo: { type: GraphQLList(ImageObject) },
    makesOffer: { type: GraphQLList(Offer) },
    member: { type: GraphQLList(member) },
    memberOf: { type: GraphQLList(memberOf) },
    naics: { type: GraphQLList(GraphQLString) },
    numberOfEmployees: { type: GraphQLList(QuantitativeValue) },
    ownershipFundingInfo: { type: GraphQLList(ownershipFundingInfo) },
    owns: { type: GraphQLList(owns) },
    parentOrganization: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    review: { type: GraphQLList(Review) },
    seeks: { type: GraphQLList(Demand) },
    slogan: { type: GraphQLList(GraphQLString) },
    sponsor: { type: GraphQLList(sponsor) },
    subOrganization: { type: GraphQLList(Organization) },
    taxID: { type: GraphQLList(GraphQLString) },
    telephone: { type: GraphQLList(GraphQLString) },
    unnamedSourcesPolicy: { type: GraphQLList(CreativeWork) },
    vatID: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const InteractionCounterInput = new GraphQLInputObjectType({
  name: 'InteractionCounterInput',
  fields: () => ({
    interactionService: { type: GraphQLList(interactionService) },
    interactionType: { type: GraphQLList(Action) },
    userInteractionCount: { type: GraphQLList(GraphQLInt) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const GeospatialGeometryInput = new GraphQLInputObjectType({
  name: 'GeospatialGeometryInput',
  fields: () => ({
    geoContains: { type: GraphQLList(geoContains) },
    geoCoveredBy: { type: GraphQLList(geoCoveredBy) },
    geoCovers: { type: GraphQLList(geoCovers) },
    geoCrosses: { type: GraphQLList(geoCrosses) },
    geoDisjoint: { type: GraphQLList(geoDisjoint) },
    geoEquals: { type: GraphQLList(geoEquals) },
    geoIntersects: { type: GraphQLList(geoIntersects) },
    geoOverlaps: { type: GraphQLList(geoOverlaps) },
    geoTouches: { type: GraphQLList(geoTouches) },
    geoWithin: { type: GraphQLList(geoWithin) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const ContactPointOptionInput = new GraphQLInputObjectType({
  name: 'ContactPointOptionInput',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const AggregateRatingInput = new GraphQLInputObjectType({
  name: 'AggregateRatingInput',
  fields: () => ({
    itemReviewed: { type: GraphQLList(Thing) },
    ratingCount: { type: GraphQLList(GraphQLInt) },
    reviewCount: { type: GraphQLList(GraphQLInt) },
    author: { type: GraphQLList(author) },
    bestRating: { type: GraphQLList(GraphQLString) },
    ratingValue: { type: GraphQLList(GraphQLString) },
    reviewAspect: { type: GraphQLList(GraphQLString) },
    worstRating: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const ServiceChannelInput = new GraphQLInputObjectType({
  name: 'ServiceChannelInput',
  fields: () => ({
    availableLanguage: { type: GraphQLList(Language) },
    processingTime: { type: GraphQLList(Duration) },
    providesService: { type: GraphQLList(Service) },
    serviceLocation: { type: GraphQLList(Place) },
    servicePhone: { type: GraphQLList(ContactPoint) },
    servicePostalAddress: { type: GraphQLList(PostalAddress) },
    serviceSmsNumber: { type: GraphQLList(ContactPoint) },
    serviceUrl: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const CreativeWorkInput = new GraphQLInputObjectType({
  name: 'CreativeWorkInput',
  fields: () => ({
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const StructuredValueInput = new GraphQLInputObjectType({
  name: 'StructuredValueInput',
  fields: () => ({
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const DataDownloadInput = new GraphQLInputObjectType({
  name: 'DataDownloadInput',
  fields: () => ({
    measurementTechnique: { type: GraphQLList(GraphQLString) },
    associatedArticle: { type: GraphQLList(NewsArticle) },
    bitrate: { type: GraphQLList(GraphQLString) },
    contentSize: { type: GraphQLList(GraphQLString) },
    contentUrl: { type: GraphQLList(GraphQLString) },
    duration: { type: GraphQLList(Duration) },
    embedUrl: { type: GraphQLList(GraphQLString) },
    encodesCreativeWork: { type: GraphQLList(CreativeWork) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    endTime: { type: GraphQLList(GraphQLString) },
    height: { type: GraphQLList(height) },
    playerType: { type: GraphQLList(GraphQLString) },
    productionCompany: { type: GraphQLList(Organization) },
    regionsAllowed: { type: GraphQLList(Place) },
    requiresSubscription: { type: GraphQLList(MediaSubscription) },
    startTime: { type: GraphQLList(GraphQLString) },
    uploadDate: { type: GraphQLList(GraphQLString) },
    width: { type: GraphQLList(width) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const GenderTypeInput = new GraphQLInputObjectType({
  name: 'GenderTypeInput',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const DemandInput = new GraphQLInputObjectType({
  name: 'DemandInput',
  fields: () => ({
    acceptedPaymentMethod: { type: GraphQLList(acceptedPaymentMethod) },
    advanceBookingRequirement: { type: GraphQLList(QuantitativeValue) },
    areaServed: { type: GraphQLList(areaServed) },
    availability: { type: GraphQLList(ItemAvailability) },
    availabilityEnds: { type: GraphQLList(GraphQLString) },
    availabilityStarts: { type: GraphQLList(GraphQLString) },
    availableAtOrFrom: { type: GraphQLList(Place) },
    availableDeliveryMethod: { type: GraphQLList(DeliveryMethod) },
    businessFunction: { type: GraphQLList(BusinessFunction) },
    deliveryLeadTime: { type: GraphQLList(QuantitativeValue) },
    eligibleCustomerType: { type: GraphQLList(BusinessEntityType) },
    eligibleDuration: { type: GraphQLList(QuantitativeValue) },
    eligibleQuantity: { type: GraphQLList(QuantitativeValue) },
    eligibleRegion: { type: GraphQLList(eligibleRegion) },
    eligibleTransactionVolume: { type: GraphQLList(PriceSpecification) },
    gtin12: { type: GraphQLList(GraphQLString) },
    gtin13: { type: GraphQLList(GraphQLString) },
    gtin14: { type: GraphQLList(GraphQLString) },
    gtin8: { type: GraphQLList(GraphQLString) },
    includesObject: { type: GraphQLList(TypeAndQuantityNode) },
    ineligibleRegion: { type: GraphQLList(ineligibleRegion) },
    inventoryLevel: { type: GraphQLList(QuantitativeValue) },
    itemCondition: { type: GraphQLList(OfferItemCondition) },
    itemOffered: { type: GraphQLList(itemOffered) },
    mpn: { type: GraphQLList(GraphQLString) },
    priceSpecification: { type: GraphQLList(PriceSpecification) },
    seller: { type: GraphQLList(seller) },
    serialNumber: { type: GraphQLList(GraphQLString) },
    sku: { type: GraphQLList(GraphQLString) },
    validFrom: { type: GraphQLList(GraphQLString) },
    validThrough: { type: GraphQLList(GraphQLString) },
    warranty: { type: GraphQLList(WarrantyPromise) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const PriceSpecificationInput = new GraphQLInputObjectType({
  name: 'PriceSpecificationInput',
  fields: () => ({
    eligibleQuantity: { type: GraphQLList(QuantitativeValue) },
    eligibleTransactionVolume: { type: GraphQLList(PriceSpecification) },
    maxPrice: { type: GraphQLList(GraphQLFloat) },
    minPrice: { type: GraphQLList(GraphQLFloat) },
    price: { type: GraphQLList(GraphQLString) },
    priceCurrency: { type: GraphQLList(GraphQLString) },
    validFrom: { type: GraphQLList(GraphQLString) },
    validThrough: { type: GraphQLList(GraphQLString) },
    valueAddedTaxIncluded: { type: GraphQLList(GraphQLBoolean) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const ProgramMembershipInput = new GraphQLInputObjectType({
  name: 'ProgramMembershipInput',
  fields: () => ({
    hostingOrganization: { type: GraphQLList(Organization) },
    member: { type: GraphQLList(member) },
    membershipNumber: { type: GraphQLList(GraphQLString) },
    membershipPointsEarned: { type: GraphQLList(QuantitativeValue) },
    programName: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const CountryInput = new GraphQLInputObjectType({
  name: 'CountryInput',
  fields: () => ({
    additionalProperty: { type: GraphQLList(GraphQLString) },
    address: { type: GraphQLList(PostalAddress) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    amenityFeature: { type: GraphQLList(LocationFeatureSpecification) },
    branchCode: { type: GraphQLList(GraphQLString) },
    containedInPlace: { type: GraphQLList(Place) },
    containsPlace: { type: GraphQLList(Place) },
    event: { type: GraphQLList(Event) },
    faxNumber: { type: GraphQLList(GraphQLString) },
    geo: { type: GraphQLList(geo) },
    geoContains: { type: GraphQLList(geoContains) },
    geoCoveredBy: { type: GraphQLList(geoCoveredBy) },
    geoCovers: { type: GraphQLList(geoCovers) },
    geoCrosses: { type: GraphQLList(geoCrosses) },
    geoDisjoint: { type: GraphQLList(geoDisjoint) },
    geoEquals: { type: GraphQLList(geoEquals) },
    geoIntersects: { type: GraphQLList(geoIntersects) },
    geoOverlaps: { type: GraphQLList(geoOverlaps) },
    geoTouches: { type: GraphQLList(geoTouches) },
    geoWithin: { type: GraphQLList(geoWithin) },
    globalLocationNumber: { type: GraphQLList(GraphQLString) },
    hasMap: { type: GraphQLList(Map) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isicV4: { type: GraphQLList(GraphQLString) },
    logo: { type: GraphQLList(ImageObject) },
    maximumAttendeeCapacity: { type: GraphQLList(GraphQLInt) },
    openingHoursSpecification: { type: GraphQLList(OpeningHoursSpecification) },
    photo: { type: GraphQLList(photo) },
    publicAccess: { type: GraphQLList(GraphQLBoolean) },
    review: { type: GraphQLList(Review) },
    slogan: { type: GraphQLList(GraphQLString) },
    smokingAllowed: { type: GraphQLList(GraphQLBoolean) },
    specialOpeningHoursSpecification: { type: GraphQLList(OpeningHoursSpecification) },
    telephone: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const DeliveryMethodInput = new GraphQLInputObjectType({
  name: 'DeliveryMethodInput',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const ClassInput = new GraphQLInputObjectType({
  name: 'ClassInput',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const DistanceInput = new GraphQLInputObjectType({
  name: 'DistanceInput',
  fields: () => ({
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const BusinessFunctionInput = new GraphQLInputObjectType({
  name: 'BusinessFunctionInput',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const LoanOrCreditInput = new GraphQLInputObjectType({
  name: 'LoanOrCreditInput',
  fields: () => ({
    amount: { type: GraphQLList(MonetaryAmount) },
    currency: { type: GraphQLList(GraphQLString) },
    gracePeriod: { type: GraphQLList(Duration) },
    loanRepaymentForm: { type: GraphQLList(RepaymentSpecification) },
    loanTerm: { type: GraphQLList(QuantitativeValue) },
    loanType: { type: GraphQLList(GraphQLString) },
    recourseLoan: { type: GraphQLList(GraphQLBoolean) },
    renegotiableLoan: { type: GraphQLList(GraphQLBoolean) },
    requiredCollateral: { type: GraphQLList(Thing) },
    annualPercentageRate: { type: GraphQLList(QuantitativeValue) },
    feesAndCommissionsSpecification: { type: GraphQLList(GraphQLString) },
    interestRate: { type: GraphQLList(QuantitativeValue) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    areaServed: { type: GraphQLList(areaServed) },
    audience: { type: GraphQLList(Audience) },
    availableChannel: { type: GraphQLList(ServiceChannel) },
    award: { type: GraphQLList(GraphQLString) },
    brand: { type: GraphQLList(brand) },
    broker: { type: GraphQLList(broker) },
    category: { type: GraphQLList(category) },
    hasOfferCatalog: { type: GraphQLList(OfferCatalog) },
    hoursAvailable: { type: GraphQLList(OpeningHoursSpecification) },
    isRelatedTo: { type: GraphQLList(isRelatedTo) },
    isSimilarTo: { type: GraphQLList(isSimilarTo) },
    logo: { type: GraphQLList(ImageObject) },
    offers: { type: GraphQLList(Offer) },
    provider: { type: GraphQLList(provider) },
    providerMobility: { type: GraphQLList(GraphQLString) },
    review: { type: GraphQLList(Review) },
    serviceOutput: { type: GraphQLList(Thing) },
    serviceType: { type: GraphQLList(GraphQLString) },
    slogan: { type: GraphQLList(GraphQLString) },
    termsOfService: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const RepaymentSpecificationInput = new GraphQLInputObjectType({
  name: 'RepaymentSpecificationInput',
  fields: () => ({
    downPayment: { type: GraphQLList(MonetaryAmount) },
    earlyPrepaymentPenalty: { type: GraphQLList(MonetaryAmount) },
    loanPaymentAmount: { type: GraphQLList(MonetaryAmount) },
    loanPaymentFrequency: { type: GraphQLList(GraphQLFloat) },
    numberOfLoanPayments: { type: GraphQLList(GraphQLFloat) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const MediaSubscriptionInput = new GraphQLInputObjectType({
  name: 'MediaSubscriptionInput',
  fields: () => ({
    authenticator: { type: GraphQLList(Organization) },
    expectsAcceptanceOf: { type: GraphQLList(Offer) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const ClipInput = new GraphQLInputObjectType({
  name: 'ClipInput',
  fields: () => ({
    actor: { type: GraphQLList(Person) },
    clipNumber: { type: GraphQLList(GraphQLString) },
    director: { type: GraphQLList(Person) },
    endOffset: { type: GraphQLList(GraphQLFloat) },
    musicBy: { type: GraphQLList(musicBy) },
    partOfEpisode: { type: GraphQLList(Episode) },
    partOfSeason: { type: GraphQLList(CreativeWorkSeason) },
    partOfSeries: { type: GraphQLList(CreativeWorkSeries) },
    startOffset: { type: GraphQLList(GraphQLFloat) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const EpisodeInput = new GraphQLInputObjectType({
  name: 'EpisodeInput',
  fields: () => ({
    actor: { type: GraphQLList(Person) },
    director: { type: GraphQLList(Person) },
    episodeNumber: { type: GraphQLList(GraphQLString) },
    musicBy: { type: GraphQLList(musicBy) },
    partOfSeason: { type: GraphQLList(CreativeWorkSeason) },
    partOfSeries: { type: GraphQLList(CreativeWorkSeries) },
    productionCompany: { type: GraphQLList(Organization) },
    trailer: { type: GraphQLList(VideoObject) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const CreativeWorkSeriesInput = new GraphQLInputObjectType({
  name: 'CreativeWorkSeriesInput',
  fields: () => ({
    endDate: { type: GraphQLList(GraphQLString) },
    issn: { type: GraphQLList(GraphQLString) },
    startDate: { type: GraphQLList(GraphQLString) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const CreativeWorkSeasonInput = new GraphQLInputObjectType({
  name: 'CreativeWorkSeasonInput',
  fields: () => ({
    actor: { type: GraphQLList(Person) },
    director: { type: GraphQLList(Person) },
    endDate: { type: GraphQLList(GraphQLString) },
    episode: { type: GraphQLList(Episode) },
    numberOfEpisodes: { type: GraphQLList(GraphQLInt) },
    partOfSeries: { type: GraphQLList(CreativeWorkSeries) },
    productionCompany: { type: GraphQLList(Organization) },
    seasonNumber: { type: GraphQLList(GraphQLString) },
    startDate: { type: GraphQLList(GraphQLString) },
    trailer: { type: GraphQLList(VideoObject) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const WarrantyPromiseInput = new GraphQLInputObjectType({
  name: 'WarrantyPromiseInput',
  fields: () => ({
    durationOfWarranty: { type: GraphQLList(QuantitativeValue) },
    warrantyScope: { type: GraphQLList(WarrantyScope) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const DurationInput = new GraphQLInputObjectType({
  name: 'DurationInput',
  fields: () => ({
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const MusicGroupInput = new GraphQLInputObjectType({
  name: 'MusicGroupInput',
  fields: () => ({
    album: { type: GraphQLList(MusicAlbum) },
    genre: { type: GraphQLList(GraphQLString) },
    track: { type: GraphQLList(track) },
    actionableFeedbackPolicy: { type: GraphQLList(CreativeWork) },
    address: { type: GraphQLList(PostalAddress) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alumni: { type: GraphQLList(Person) },
    areaServed: { type: GraphQLList(areaServed) },
    award: { type: GraphQLList(GraphQLString) },
    brand: { type: GraphQLList(brand) },
    contactPoint: { type: GraphQLList(ContactPoint) },
    correctionsPolicy: { type: GraphQLList(CreativeWork) },
    department: { type: GraphQLList(Organization) },
    dissolutionDate: { type: GraphQLList(GraphQLString) },
    diversityPolicy: { type: GraphQLList(CreativeWork) },
    diversityStaffingReport: { type: GraphQLList(Article) },
    duns: { type: GraphQLList(GraphQLString) },
    email: { type: GraphQLList(GraphQLString) },
    employee: { type: GraphQLList(Person) },
    ethicsPolicy: { type: GraphQLList(CreativeWork) },
    event: { type: GraphQLList(Event) },
    faxNumber: { type: GraphQLList(GraphQLString) },
    founder: { type: GraphQLList(Person) },
    foundingDate: { type: GraphQLList(GraphQLString) },
    foundingLocation: { type: GraphQLList(Place) },
    funder: { type: GraphQLList(funder) },
    globalLocationNumber: { type: GraphQLList(GraphQLString) },
    hasOfferCatalog: { type: GraphQLList(OfferCatalog) },
    hasPOS: { type: GraphQLList(Place) },
    isicV4: { type: GraphQLList(GraphQLString) },
    knowsAbout: { type: GraphQLList(Thing) },
    knowsLanguage: { type: GraphQLList(Language) },
    legalName: { type: GraphQLList(GraphQLString) },
    leiCode: { type: GraphQLList(GraphQLString) },
    location: { type: GraphQLList(location) },
    logo: { type: GraphQLList(ImageObject) },
    makesOffer: { type: GraphQLList(Offer) },
    member: { type: GraphQLList(member) },
    memberOf: { type: GraphQLList(memberOf) },
    naics: { type: GraphQLList(GraphQLString) },
    numberOfEmployees: { type: GraphQLList(QuantitativeValue) },
    ownershipFundingInfo: { type: GraphQLList(ownershipFundingInfo) },
    owns: { type: GraphQLList(owns) },
    parentOrganization: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    review: { type: GraphQLList(Review) },
    seeks: { type: GraphQLList(Demand) },
    slogan: { type: GraphQLList(GraphQLString) },
    sponsor: { type: GraphQLList(sponsor) },
    subOrganization: { type: GraphQLList(Organization) },
    taxID: { type: GraphQLList(GraphQLString) },
    telephone: { type: GraphQLList(GraphQLString) },
    unnamedSourcesPolicy: { type: GraphQLList(CreativeWork) },
    vatID: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const ItemListInput = new GraphQLInputObjectType({
  name: 'ItemListInput',
  fields: () => ({
    itemListElement: { type: GraphQLList(itemListElement) },
    itemListOrder: { type: GraphQLList(ItemListOrderType) },
    numberOfItems: { type: GraphQLList(GraphQLInt) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const ListItemInput = new GraphQLInputObjectType({
  name: 'ListItemInput',
  fields: () => ({
    item: { type: GraphQLList(Thing) },
    nextItem: { type: GraphQLList(ListItem) },
    position: { type: GraphQLList(GraphQLString) },
    previousItem: { type: GraphQLList(ListItem) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const MusicAlbumInput = new GraphQLInputObjectType({
  name: 'MusicAlbumInput',
  fields: () => ({
    albumProductionType: { type: GraphQLList(MusicAlbumProductionType) },
    albumRelease: { type: GraphQLList(MusicRelease) },
    albumReleaseType: { type: GraphQLList(MusicAlbumReleaseType) },
    byArtist: { type: GraphQLList(byArtist) },
    numTracks: { type: GraphQLList(GraphQLInt) },
    track: { type: GraphQLList(track) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const MusicReleaseInput = new GraphQLInputObjectType({
  name: 'MusicReleaseInput',
  fields: () => ({
    catalogNumber: { type: GraphQLList(GraphQLString) },
    creditedTo: { type: GraphQLList(creditedTo) },
    duration: { type: GraphQLList(Duration) },
    musicReleaseFormat: { type: GraphQLList(MusicReleaseFormatType) },
    recordLabel: { type: GraphQLList(Organization) },
    releaseOf: { type: GraphQLList(MusicAlbum) },
    numTracks: { type: GraphQLList(GraphQLInt) },
    track: { type: GraphQLList(track) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const MusicAlbumReleaseTypeInput = new GraphQLInputObjectType({
  name: 'MusicAlbumReleaseTypeInput',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const MusicAlbumProductionTypeInput = new GraphQLInputObjectType({
  name: 'MusicAlbumProductionTypeInput',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const DataCatalogInput = new GraphQLInputObjectType({
  name: 'DataCatalogInput',
  fields: () => ({
    dataset: { type: GraphQLList(Dataset) },
    measurementTechnique: { type: GraphQLList(GraphQLString) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const NewsArticleInput = new GraphQLInputObjectType({
  name: 'NewsArticleInput',
  fields: () => ({
    dateline: { type: GraphQLList(GraphQLString) },
    printColumn: { type: GraphQLList(GraphQLString) },
    printEdition: { type: GraphQLList(GraphQLString) },
    printPage: { type: GraphQLList(GraphQLString) },
    printSection: { type: GraphQLList(GraphQLString) },
    articleBody: { type: GraphQLList(GraphQLString) },
    articleSection: { type: GraphQLList(GraphQLString) },
    backstory: { type: GraphQLList(CreativeWork) },
    pageEnd: { type: GraphQLList(GraphQLString) },
    pageStart: { type: GraphQLList(GraphQLString) },
    pagination: { type: GraphQLList(GraphQLString) },
    speakable: { type: GraphQLList(SpeakableSpecification) },
    wordCount: { type: GraphQLList(GraphQLInt) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const SpeakableSpecificationInput = new GraphQLInputObjectType({
  name: 'SpeakableSpecificationInput',
  fields: () => ({
    cssSelector: { type: GraphQLList(GraphQLString) },
    xpath: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const QuantitativeValueInput = new GraphQLInputObjectType({
  name: 'QuantitativeValueInput',
  fields: () => ({
    additionalProperty: { type: GraphQLList(GraphQLString) },
    maxValue: { type: GraphQLList(GraphQLFloat) },
    minValue: { type: GraphQLList(GraphQLFloat) },
    unitCode: { type: GraphQLList(GraphQLString) },
    unitText: { type: GraphQLList(GraphQLString) },
    value: { type: GraphQLList(StructuredValue) },
    valueReference: { type: GraphQLList(valueReference) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const PropertyInput = new GraphQLInputObjectType({
  name: 'PropertyInput',
  fields: () => ({
    domainIncludes: { type: GraphQLList(Class) },
    inverseOf: { type: GraphQLList(Property) },
    rangeIncludes: { type: GraphQLList(Class) },
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const ArticleInput = new GraphQLInputObjectType({
  name: 'ArticleInput',
  fields: () => ({
    articleBody: { type: GraphQLList(GraphQLString) },
    articleSection: { type: GraphQLList(GraphQLString) },
    backstory: { type: GraphQLList(CreativeWork) },
    pageEnd: { type: GraphQLList(GraphQLString) },
    pageStart: { type: GraphQLList(GraphQLString) },
    pagination: { type: GraphQLList(GraphQLString) },
    speakable: { type: GraphQLList(SpeakableSpecification) },
    wordCount: { type: GraphQLList(GraphQLInt) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const OfferItemConditionInput = new GraphQLInputObjectType({
  name: 'OfferItemConditionInput',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const AboutPageInput = new GraphQLInputObjectType({
  name: 'AboutPageInput',
  fields: () => ({
    breadcrumb: { type: GraphQLList(BreadcrumbList) },
    lastReviewed: { type: GraphQLList(GraphQLString) },
    mainContentOfPage: { type: GraphQLList(WebPageElement) },
    primaryImageOfPage: { type: GraphQLList(ImageObject) },
    relatedLink: { type: GraphQLList(GraphQLString) },
    reviewedBy: { type: GraphQLList(reviewedBy) },
    significantLink: { type: GraphQLList(GraphQLString) },
    speakable: { type: GraphQLList(SpeakableSpecification) },
    specialty: { type: GraphQLList(Specialty) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const SpecialtyInput = new GraphQLInputObjectType({
  name: 'SpecialtyInput',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const BreadcrumbListInput = new GraphQLInputObjectType({
  name: 'BreadcrumbListInput',
  fields: () => ({
    itemListElement: { type: GraphQLList(itemListElement) },
    itemListOrder: { type: GraphQLList(ItemListOrderType) },
    numberOfItems: { type: GraphQLList(GraphQLInt) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const EnumerationInput = new GraphQLInputObjectType({
  name: 'EnumerationInput',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const EducationalOccupationalCredentialInput = new GraphQLInputObjectType({
  name: 'EducationalOccupationalCredentialInput',
  fields: () => ({
    competencyRequired: { type: GraphQLList(DefinedTerm) },
    credentialCategory: { type: GraphQLList(DefinedTerm) },
    educationalLevel: { type: GraphQLList(DefinedTerm) },
    recognizedBy: { type: GraphQLList(Organization) },
    validFor: { type: GraphQLList(Duration) },
    validIn: { type: GraphQLList(AdministrativeArea) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const WebSiteInput = new GraphQLInputObjectType({
  name: 'WebSiteInput',
  fields: () => ({
    issn: { type: GraphQLList(GraphQLString) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const OfferCatalogInput = new GraphQLInputObjectType({
  name: 'OfferCatalogInput',
  fields: () => ({
    itemListElement: { type: GraphQLList(itemListElement) },
    itemListOrder: { type: GraphQLList(ItemListOrderType) },
    numberOfItems: { type: GraphQLList(GraphQLInt) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const DefinedTermInput = new GraphQLInputObjectType({
  name: 'DefinedTermInput',
  fields: () => ({
    inDefinedTermSet: { type: GraphQLList(DefinedTermSet) },
    termCode: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const DefinedTermSetInput = new GraphQLInputObjectType({
  name: 'DefinedTermSetInput',
  fields: () => ({
    hasDefinedTerm: { type: GraphQLList(DefinedTerm) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const RatingInput = new GraphQLInputObjectType({
  name: 'RatingInput',
  fields: () => ({
    author: { type: GraphQLList(author) },
    bestRating: { type: GraphQLList(GraphQLString) },
    ratingValue: { type: GraphQLList(GraphQLString) },
    reviewAspect: { type: GraphQLList(GraphQLString) },
    worstRating: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const OwnershipInfoInput = new GraphQLInputObjectType({
  name: 'OwnershipInfoInput',
  fields: () => ({
    acquiredFrom: { type: GraphQLList(acquiredFrom) },
    ownedFrom: { type: GraphQLList(GraphQLString) },
    ownedThrough: { type: GraphQLList(GraphQLString) },
    typeOfGood: { type: GraphQLList(typeOfGood) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const ReviewInput = new GraphQLInputObjectType({
  name: 'ReviewInput',
  fields: () => ({
    itemReviewed: { type: GraphQLList(Thing) },
    reviewAspect: { type: GraphQLList(GraphQLString) },
    reviewBody: { type: GraphQLList(GraphQLString) },
    reviewRating: { type: GraphQLList(Rating) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const MapCategoryTypeInput = new GraphQLInputObjectType({
  name: 'MapCategoryTypeInput',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const WebPageElementInput = new GraphQLInputObjectType({
  name: 'WebPageElementInput',
  fields: () => ({
    cssSelector: { type: GraphQLList(GraphQLString) },
    xpath: { type: GraphQLList(GraphQLString) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const PhotographInput = new GraphQLInputObjectType({
  name: 'PhotographInput',
  fields: () => ({
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const MusicReleaseFormatTypeInput = new GraphQLInputObjectType({
  name: 'MusicReleaseFormatTypeInput',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const EventStatusTypeInput = new GraphQLInputObjectType({
  name: 'EventStatusTypeInput',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const PublicationEventInput = new GraphQLInputObjectType({
  name: 'PublicationEventInput',
  fields: () => ({
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    publishedBy: { type: GraphQLList(publishedBy) },
    publishedOn: { type: GraphQLList(BroadcastService) },
    about: { type: GraphQLList(Thing) },
    actor: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    attendee: { type: GraphQLList(attendee) },
    audience: { type: GraphQLList(Audience) },
    composer: { type: GraphQLList(composer) },
    contributor: { type: GraphQLList(contributor) },
    director: { type: GraphQLList(Person) },
    doorTime: { type: GraphQLList(GraphQLString) },
    duration: { type: GraphQLList(Duration) },
    endDate: { type: GraphQLList(GraphQLString) },
    eventStatus: { type: GraphQLList(EventStatusType) },
    funder: { type: GraphQLList(funder) },
    inLanguage: { type: GraphQLList(Language) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    location: { type: GraphQLList(location) },
    maximumAttendeeCapacity: { type: GraphQLList(GraphQLInt) },
    offers: { type: GraphQLList(Offer) },
    organizer: { type: GraphQLList(organizer) },
    performer: { type: GraphQLList(performer) },
    previousStartDate: { type: GraphQLList(GraphQLString) },
    recordedIn: { type: GraphQLList(CreativeWork) },
    remainingAttendeeCapacity: { type: GraphQLList(GraphQLInt) },
    review: { type: GraphQLList(Review) },
    sponsor: { type: GraphQLList(sponsor) },
    startDate: { type: GraphQLList(GraphQLString) },
    subEvent: { type: GraphQLList(Event) },
    superEvent: { type: GraphQLList(Event) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    workFeatured: { type: GraphQLList(CreativeWork) },
    workPerformed: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const BroadcastServiceInput = new GraphQLInputObjectType({
  name: 'BroadcastServiceInput',
  fields: () => ({
    broadcastAffiliateOf: { type: GraphQLList(Organization) },
    broadcastDisplayName: { type: GraphQLList(GraphQLString) },
    broadcastFrequency: { type: GraphQLList(BroadcastFrequencySpecification) },
    broadcastTimezone: { type: GraphQLList(GraphQLString) },
    broadcaster: { type: GraphQLList(Organization) },
    hasBroadcastChannel: { type: GraphQLList(BroadcastChannel) },
    parentService: { type: GraphQLList(BroadcastService) },
    videoFormat: { type: GraphQLList(GraphQLString) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    areaServed: { type: GraphQLList(areaServed) },
    audience: { type: GraphQLList(Audience) },
    availableChannel: { type: GraphQLList(ServiceChannel) },
    award: { type: GraphQLList(GraphQLString) },
    brand: { type: GraphQLList(brand) },
    broker: { type: GraphQLList(broker) },
    category: { type: GraphQLList(category) },
    hasOfferCatalog: { type: GraphQLList(OfferCatalog) },
    hoursAvailable: { type: GraphQLList(OpeningHoursSpecification) },
    isRelatedTo: { type: GraphQLList(isRelatedTo) },
    isSimilarTo: { type: GraphQLList(isSimilarTo) },
    logo: { type: GraphQLList(ImageObject) },
    offers: { type: GraphQLList(Offer) },
    provider: { type: GraphQLList(provider) },
    providerMobility: { type: GraphQLList(GraphQLString) },
    review: { type: GraphQLList(Review) },
    serviceOutput: { type: GraphQLList(Thing) },
    serviceType: { type: GraphQLList(GraphQLString) },
    slogan: { type: GraphQLList(GraphQLString) },
    termsOfService: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const BroadcastFrequencySpecificationInput = new GraphQLInputObjectType({
  name: 'BroadcastFrequencySpecificationInput',
  fields: () => ({
    broadcastFrequencyValue: { type: GraphQLList(QuantitativeValue) },
    broadcastSignalModulation: { type: GraphQLList(QualitativeValue) },
    broadcastSubChannel: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const BroadcastChannelInput = new GraphQLInputObjectType({
  name: 'BroadcastChannelInput',
  fields: () => ({
    broadcastChannelId: { type: GraphQLList(GraphQLString) },
    broadcastFrequency: { type: GraphQLList(BroadcastFrequencySpecification) },
    broadcastServiceTier: { type: GraphQLList(GraphQLString) },
    genre: { type: GraphQLList(GraphQLString) },
    inBroadcastLineup: { type: GraphQLList(CableOrSatelliteService) },
    providesBroadcastService: { type: GraphQLList(BroadcastService) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const MusicRecordingInput = new GraphQLInputObjectType({
  name: 'MusicRecordingInput',
  fields: () => ({
    byArtist: { type: GraphQLList(byArtist) },
    duration: { type: GraphQLList(Duration) },
    inAlbum: { type: GraphQLList(MusicAlbum) },
    inPlaylist: { type: GraphQLList(MusicPlaylist) },
    isrcCode: { type: GraphQLList(GraphQLString) },
    recordingOf: { type: GraphQLList(MusicComposition) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const ItemListOrderTypeInput = new GraphQLInputObjectType({
  name: 'ItemListOrderTypeInput',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const MusicPlaylistInput = new GraphQLInputObjectType({
  name: 'MusicPlaylistInput',
  fields: () => ({
    numTracks: { type: GraphQLList(GraphQLInt) },
    track: { type: GraphQLList(track) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const QuestionInput = new GraphQLInputObjectType({
  name: 'QuestionInput',
  fields: () => ({
    acceptedAnswer: { type: GraphQLList(acceptedAnswer) },
    answerCount: { type: GraphQLList(GraphQLInt) },
    downvoteCount: { type: GraphQLList(GraphQLInt) },
    suggestedAnswer: { type: GraphQLList(suggestedAnswer) },
    upvoteCount: { type: GraphQLList(GraphQLInt) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const AnswerInput = new GraphQLInputObjectType({
  name: 'AnswerInput',
  fields: () => ({
    downvoteCount: { type: GraphQLList(GraphQLInt) },
    parentItem: { type: GraphQLList(Question) },
    upvoteCount: { type: GraphQLList(GraphQLInt) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const CableOrSatelliteServiceInput = new GraphQLInputObjectType({
  name: 'CableOrSatelliteServiceInput',
  fields: () => ({
    aggregateRating: { type: GraphQLList(AggregateRating) },
    areaServed: { type: GraphQLList(areaServed) },
    audience: { type: GraphQLList(Audience) },
    availableChannel: { type: GraphQLList(ServiceChannel) },
    award: { type: GraphQLList(GraphQLString) },
    brand: { type: GraphQLList(brand) },
    broker: { type: GraphQLList(broker) },
    category: { type: GraphQLList(category) },
    hasOfferCatalog: { type: GraphQLList(OfferCatalog) },
    hoursAvailable: { type: GraphQLList(OpeningHoursSpecification) },
    isRelatedTo: { type: GraphQLList(isRelatedTo) },
    isSimilarTo: { type: GraphQLList(isSimilarTo) },
    logo: { type: GraphQLList(ImageObject) },
    offers: { type: GraphQLList(Offer) },
    provider: { type: GraphQLList(provider) },
    providerMobility: { type: GraphQLList(GraphQLString) },
    review: { type: GraphQLList(Review) },
    serviceOutput: { type: GraphQLList(Thing) },
    serviceType: { type: GraphQLList(GraphQLString) },
    slogan: { type: GraphQLList(GraphQLString) },
    termsOfService: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const AudienceInput = new GraphQLInputObjectType({
  name: 'AudienceInput',
  fields: () => ({
    audienceType: { type: GraphQLList(GraphQLString) },
    geographicArea: { type: GraphQLList(AdministrativeArea) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const WarrantyScopeInput = new GraphQLInputObjectType({
  name: 'WarrantyScopeInput',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const MusicCompositionInput = new GraphQLInputObjectType({
  name: 'MusicCompositionInput',
  fields: () => ({
    composer: { type: GraphQLList(composer) },
    firstPerformance: { type: GraphQLList(Event) },
    includedComposition: { type: GraphQLList(MusicComposition) },
    iswcCode: { type: GraphQLList(GraphQLString) },
    lyricist: { type: GraphQLList(Person) },
    lyrics: { type: GraphQLList(CreativeWork) },
    musicArrangement: { type: GraphQLList(MusicComposition) },
    musicCompositionForm: { type: GraphQLList(GraphQLString) },
    musicalKey: { type: GraphQLList(GraphQLString) },
    recordedAs: { type: GraphQLList(MusicRecording) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const OpeningHoursSpecificationInput = new GraphQLInputObjectType({
  name: 'OpeningHoursSpecificationInput',
  fields: () => ({
    closes: { type: GraphQLList(GraphQLString) },
    dayOfWeek: { type: GraphQLList(DayOfWeek) },
    opens: { type: GraphQLList(GraphQLString) },
    validFrom: { type: GraphQLList(GraphQLString) },
    validThrough: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

const DayOfWeekInput = new GraphQLInputObjectType({
  name: 'DayOfWeekInput',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },

  })
});

/* union type for input types definition */

const audioInput = UnionInputType({
  name: 'audioInput',
  inputTypes: [
    AudioObjectInput,
    ClipInput,
    
  ],
});

const authorInput = UnionInputType({
  name: 'authorInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const contributorInput = UnionInputType({
  name: 'contributorInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const copyrightHolderInput = UnionInputType({
  name: 'copyrightHolderInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const creatorInput = UnionInputType({
  name: 'creatorInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const funderInput = UnionInputType({
  name: 'funderInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const isBasedOnInput = UnionInputType({
  name: 'isBasedOnInput',
  inputTypes: [
    ProductInput,
    CreativeWorkInput,
    
  ],
});

const producerInput = UnionInputType({
  name: 'producerInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const providerInput = UnionInputType({
  name: 'providerInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const publisherInput = UnionInputType({
  name: 'publisherInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const sdPublisherInput = UnionInputType({
  name: 'sdPublisherInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const sponsorInput = UnionInputType({
  name: 'sponsorInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const translatorInput = UnionInputType({
  name: 'translatorInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const videoInput = UnionInputType({
  name: 'videoInput',
  inputTypes: [
    ClipInput,
    VideoObjectInput,
    
  ],
});

const subjectOfInput = UnionInputType({
  name: 'subjectOfInput',
  inputTypes: [
    EventInput,
    CreativeWorkInput,
    
  ],
});

const brandInput = UnionInputType({
  name: 'brandInput',
  inputTypes: [
    BrandInput,
    OrganizationInput,
    
  ],
});

const categoryInput = UnionInputType({
  name: 'categoryInput',
  inputTypes: [
    ThingInput,
    PhysicalActivityCategoryInput,
    
  ],
});

const depthInput = UnionInputType({
  name: 'depthInput',
  inputTypes: [
    QuantitativeValueInput,
    DistanceInput,
    
  ],
});

const heightInput = UnionInputType({
  name: 'heightInput',
  inputTypes: [
    QuantitativeValueInput,
    DistanceInput,
    
  ],
});

const isRelatedToInput = UnionInputType({
  name: 'isRelatedToInput',
  inputTypes: [
    ProductInput,
    ServiceInput,
    
  ],
});

const isSimilarToInput = UnionInputType({
  name: 'isSimilarToInput',
  inputTypes: [
    ProductInput,
    ServiceInput,
    
  ],
});

const widthInput = UnionInputType({
  name: 'widthInput',
  inputTypes: [
    QuantitativeValueInput,
    DistanceInput,
    
  ],
});

const agentInput = UnionInputType({
  name: 'agentInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const locationInput = UnionInputType({
  name: 'locationInput',
  inputTypes: [
    PostalAddressInput,
    PlaceInput,
    
  ],
});

const participantInput = UnionInputType({
  name: 'participantInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const areaServedInput = UnionInputType({
  name: 'areaServedInput',
  inputTypes: [
    AdministrativeAreaInput,
    GeoShapeInput,
    PlaceInput,
    
  ],
});

const brokerInput = UnionInputType({
  name: 'brokerInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const geoInput = UnionInputType({
  name: 'geoInput',
  inputTypes: [
    GeoCoordinatesInput,
    GeoShapeInput,
    
  ],
});

const geoContainsInput = UnionInputType({
  name: 'geoContainsInput',
  inputTypes: [
    GeospatialGeometryInput,
    PlaceInput,
    
  ],
});

const geoCoveredByInput = UnionInputType({
  name: 'geoCoveredByInput',
  inputTypes: [
    GeospatialGeometryInput,
    PlaceInput,
    
  ],
});

const geoCoversInput = UnionInputType({
  name: 'geoCoversInput',
  inputTypes: [
    GeospatialGeometryInput,
    PlaceInput,
    
  ],
});

const geoCrossesInput = UnionInputType({
  name: 'geoCrossesInput',
  inputTypes: [
    GeospatialGeometryInput,
    PlaceInput,
    
  ],
});

const geoDisjointInput = UnionInputType({
  name: 'geoDisjointInput',
  inputTypes: [
    GeospatialGeometryInput,
    PlaceInput,
    
  ],
});

const geoEqualsInput = UnionInputType({
  name: 'geoEqualsInput',
  inputTypes: [
    GeospatialGeometryInput,
    PlaceInput,
    
  ],
});

const geoIntersectsInput = UnionInputType({
  name: 'geoIntersectsInput',
  inputTypes: [
    GeospatialGeometryInput,
    PlaceInput,
    
  ],
});

const geoOverlapsInput = UnionInputType({
  name: 'geoOverlapsInput',
  inputTypes: [
    GeospatialGeometryInput,
    PlaceInput,
    
  ],
});

const geoTouchesInput = UnionInputType({
  name: 'geoTouchesInput',
  inputTypes: [
    GeospatialGeometryInput,
    PlaceInput,
    
  ],
});

const geoWithinInput = UnionInputType({
  name: 'geoWithinInput',
  inputTypes: [
    GeospatialGeometryInput,
    PlaceInput,
    
  ],
});

const photoInput = UnionInputType({
  name: 'photoInput',
  inputTypes: [
    PhotographInput,
    ImageObjectInput,
    
  ],
});

const valueReferenceInput = UnionInputType({
  name: 'valueReferenceInput',
  inputTypes: [
    QualitativeValueInput,
    EnumerationInput,
    QuantitativeValueInput,
    StructuredValueInput,
    
  ],
});

const musicByInput = UnionInputType({
  name: 'musicByInput',
  inputTypes: [
    PersonInput,
    MusicGroupInput,
    
  ],
});

const attendeeInput = UnionInputType({
  name: 'attendeeInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const composerInput = UnionInputType({
  name: 'composerInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const organizerInput = UnionInputType({
  name: 'organizerInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const performerInput = UnionInputType({
  name: 'performerInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const supersededByInput = UnionInputType({
  name: 'supersededByInput',
  inputTypes: [
    ClassInput,
    EnumerationInput,
    PropertyInput,
    
  ],
});

const alumniOfInput = UnionInputType({
  name: 'alumniOfInput',
  inputTypes: [
    EducationalOrganizationInput,
    OrganizationInput,
    
  ],
});

const homeLocationInput = UnionInputType({
  name: 'homeLocationInput',
  inputTypes: [
    ContactPointInput,
    PlaceInput,
    
  ],
});

const memberOfInput = UnionInputType({
  name: 'memberOfInput',
  inputTypes: [
    OrganizationInput,
    ProgramMembershipInput,
    
  ],
});

const netWorthInput = UnionInputType({
  name: 'netWorthInput',
  inputTypes: [
    MonetaryAmountInput,
    PriceSpecificationInput,
    
  ],
});

const ownsInput = UnionInputType({
  name: 'ownsInput',
  inputTypes: [
    ProductInput,
    OwnershipInfoInput,
    
  ],
});

const workLocationInput = UnionInputType({
  name: 'workLocationInput',
  inputTypes: [
    ContactPointInput,
    PlaceInput,
    
  ],
});

const memberInput = UnionInputType({
  name: 'memberInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const ownershipFundingInfoInput = UnionInputType({
  name: 'ownershipFundingInfoInput',
  inputTypes: [
    AboutPageInput,
    CreativeWorkInput,
    
  ],
});

const dataFeedElementInput = UnionInputType({
  name: 'dataFeedElementInput',
  inputTypes: [
    ThingInput,
    DataFeedItemInput,
    
  ],
});

const acceptedPaymentMethodInput = UnionInputType({
  name: 'acceptedPaymentMethodInput',
  inputTypes: [
    LoanOrCreditInput,
    PaymentMethodInput,
    
  ],
});

const eligibleRegionInput = UnionInputType({
  name: 'eligibleRegionInput',
  inputTypes: [
    GeoShapeInput,
    PlaceInput,
    
  ],
});

const ineligibleRegionInput = UnionInputType({
  name: 'ineligibleRegionInput',
  inputTypes: [
    GeoShapeInput,
    PlaceInput,
    
  ],
});

const itemOfferedInput = UnionInputType({
  name: 'itemOfferedInput',
  inputTypes: [
    ProductInput,
    ServiceInput,
    
  ],
});

const offeredByInput = UnionInputType({
  name: 'offeredByInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const sellerInput = UnionInputType({
  name: 'sellerInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const typeOfGoodInput = UnionInputType({
  name: 'typeOfGoodInput',
  inputTypes: [
    ProductInput,
    ServiceInput,
    
  ],
});

const interactionServiceInput = UnionInputType({
  name: 'interactionServiceInput',
  inputTypes: [
    WebSiteInput,
    SoftwareApplicationInput,
    
  ],
});

const trackInput = UnionInputType({
  name: 'trackInput',
  inputTypes: [
    ItemListInput,
    MusicRecordingInput,
    
  ],
});

const itemListElementInput = UnionInputType({
  name: 'itemListElementInput',
  inputTypes: [
    ListItemInput,
    ThingInput,
    
  ],
});

const byArtistInput = UnionInputType({
  name: 'byArtistInput',
  inputTypes: [
    PersonInput,
    MusicGroupInput,
    
  ],
});

const creditedToInput = UnionInputType({
  name: 'creditedToInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const reviewedByInput = UnionInputType({
  name: 'reviewedByInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const acquiredFromInput = UnionInputType({
  name: 'acquiredFromInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const publishedByInput = UnionInputType({
  name: 'publishedByInput',
  inputTypes: [
    OrganizationInput,
    PersonInput,
    
  ],
});

const acceptedAnswerInput = UnionInputType({
  name: 'acceptedAnswerInput',
  inputTypes: [
    ItemListInput,
    AnswerInput,
    
  ],
});

const suggestedAnswerInput = UnionInputType({
  name: 'suggestedAnswerInput',
  inputTypes: [
    ItemListInput,
    AnswerInput,
    
  ],
});

/* AnyInput definition */
const AnyInput = UnionInputType({
  name: 'AnyInput',
  inputTypes: [
    DatasetInput, 
    ProductInput, 
    ActionInput, 
    EntryPointInput, 
    ThingInput, 
    ServiceInput, 
    AdministrativeAreaInput, 
    LocationFeatureSpecificationInput, 
    VideoObjectInput, 
    EventInput, 
    LanguageInput, 
    PhysicalActivityCategoryInput, 
    ProductModelInput, 
    PostalAddressInput, 
    PlaceInput, 
    AudioObjectInput, 
    AlignmentObjectInput, 
    CommentInput, 
    ImageObjectInput, 
    ActionStatusTypeInput, 
    PersonInput, 
    ContactPointInput, 
    OccupationInput, 
    MonetaryAmountInput, 
    EducationalOrganizationInput, 
    CorrectionCommentInput, 
    BrandInput, 
    GeoCoordinatesInput, 
    GeoShapeInput, 
    MapInput, 
    QualitativeValueInput, 
    MonetaryAmountDistributionInput, 
    SoftwareApplicationInput, 
    DataFeedInput, 
    DataFeedItemInput, 
    OfferInput, 
    TypeAndQuantityNodeInput, 
    ItemAvailabilityInput, 
    BusinessEntityTypeInput, 
    PaymentMethodInput, 
    MediaObjectInput, 
    OrganizationInput, 
    InteractionCounterInput, 
    GeospatialGeometryInput, 
    ContactPointOptionInput, 
    AggregateRatingInput, 
    ServiceChannelInput, 
    CreativeWorkInput, 
    StructuredValueInput, 
    DataDownloadInput, 
    GenderTypeInput, 
    DemandInput, 
    PriceSpecificationInput, 
    ProgramMembershipInput, 
    CountryInput, 
    DeliveryMethodInput, 
    ClassInput, 
    DistanceInput, 
    BusinessFunctionInput, 
    LoanOrCreditInput, 
    RepaymentSpecificationInput, 
    MediaSubscriptionInput, 
    ClipInput, 
    EpisodeInput, 
    CreativeWorkSeriesInput, 
    CreativeWorkSeasonInput, 
    WarrantyPromiseInput, 
    DurationInput, 
    MusicGroupInput, 
    ItemListInput, 
    ListItemInput, 
    MusicAlbumInput, 
    MusicReleaseInput, 
    MusicAlbumReleaseTypeInput, 
    MusicAlbumProductionTypeInput, 
    DataCatalogInput, 
    NewsArticleInput, 
    SpeakableSpecificationInput, 
    QuantitativeValueInput, 
    PropertyInput, 
    ArticleInput, 
    OfferItemConditionInput, 
    AboutPageInput, 
    SpecialtyInput, 
    BreadcrumbListInput, 
    EnumerationInput, 
    EducationalOccupationalCredentialInput, 
    WebSiteInput, 
    OfferCatalogInput, 
    DefinedTermInput, 
    DefinedTermSetInput, 
    RatingInput, 
    OwnershipInfoInput, 
    ReviewInput, 
    MapCategoryTypeInput, 
    WebPageElementInput, 
    PhotographInput, 
    MusicReleaseFormatTypeInput, 
    EventStatusTypeInput, 
    PublicationEventInput, 
    BroadcastServiceInput, 
    BroadcastFrequencySpecificationInput, 
    BroadcastChannelInput, 
    MusicRecordingInput, 
    ItemListOrderTypeInput, 
    MusicPlaylistInput, 
    QuestionInput, 
    AnswerInput, 
    CableOrSatelliteServiceInput, 
    AudienceInput, 
    WarrantyScopeInput, 
    MusicCompositionInput, 
    OpeningHoursSpecificationInput, 
    DayOfWeekInput, 
    
  ],
  resolveType(name) {
    // The important part: return the type from the schema from its name (e.g. "FirstInputType")
    // console.log(schema.getTypeMap());
    return schema.getTypeMap()[name + 'Input'];
  },
  typeKey: '__typename'
});

/* resolvers */
resolvers = { AnyInput };

/* typeDefs */
const typeDefs = `
scalar AnyInput
scalar DatasetInput
scalar ProductInput
scalar ActionInput
scalar EntryPointInput
scalar ThingInput
scalar ServiceInput
scalar AdministrativeAreaInput
scalar LocationFeatureSpecificationInput
scalar VideoObjectInput
scalar EventInput
scalar LanguageInput
scalar PhysicalActivityCategoryInput
scalar ProductModelInput
scalar PostalAddressInput
scalar PlaceInput
scalar AudioObjectInput
scalar AlignmentObjectInput
scalar CommentInput
scalar ImageObjectInput
scalar ActionStatusTypeInput
scalar PersonInput
scalar ContactPointInput
scalar OccupationInput
scalar MonetaryAmountInput
scalar EducationalOrganizationInput
scalar CorrectionCommentInput
scalar BrandInput
scalar GeoCoordinatesInput
scalar GeoShapeInput
scalar MapInput
scalar QualitativeValueInput
scalar MonetaryAmountDistributionInput
scalar SoftwareApplicationInput
scalar DataFeedInput
scalar DataFeedItemInput
scalar OfferInput
scalar TypeAndQuantityNodeInput
scalar ItemAvailabilityInput
scalar BusinessEntityTypeInput
scalar PaymentMethodInput
scalar MediaObjectInput
scalar OrganizationInput
scalar InteractionCounterInput
scalar GeospatialGeometryInput
scalar ContactPointOptionInput
scalar AggregateRatingInput
scalar ServiceChannelInput
scalar CreativeWorkInput
scalar StructuredValueInput
scalar DataDownloadInput
scalar GenderTypeInput
scalar DemandInput
scalar PriceSpecificationInput
scalar ProgramMembershipInput
scalar CountryInput
scalar DeliveryMethodInput
scalar ClassInput
scalar DistanceInput
scalar BusinessFunctionInput
scalar LoanOrCreditInput
scalar RepaymentSpecificationInput
scalar MediaSubscriptionInput
scalar ClipInput
scalar EpisodeInput
scalar CreativeWorkSeriesInput
scalar CreativeWorkSeasonInput
scalar WarrantyPromiseInput
scalar DurationInput
scalar MusicGroupInput
scalar ItemListInput
scalar ListItemInput
scalar MusicAlbumInput
scalar MusicReleaseInput
scalar MusicAlbumReleaseTypeInput
scalar MusicAlbumProductionTypeInput
scalar DataCatalogInput
scalar NewsArticleInput
scalar SpeakableSpecificationInput
scalar QuantitativeValueInput
scalar PropertyInput
scalar ArticleInput
scalar OfferItemConditionInput
scalar AboutPageInput
scalar SpecialtyInput
scalar BreadcrumbListInput
scalar EnumerationInput
scalar EducationalOccupationalCredentialInput
scalar WebSiteInput
scalar OfferCatalogInput
scalar DefinedTermInput
scalar DefinedTermSetInput
scalar RatingInput
scalar OwnershipInfoInput
scalar ReviewInput
scalar MapCategoryTypeInput
scalar WebPageElementInput
scalar PhotographInput
scalar MusicReleaseFormatTypeInput
scalar EventStatusTypeInput
scalar PublicationEventInput
scalar BroadcastServiceInput
scalar BroadcastFrequencySpecificationInput
scalar BroadcastChannelInput
scalar MusicRecordingInput
scalar ItemListOrderTypeInput
scalar MusicPlaylistInput
scalar QuestionInput
scalar AnswerInput
scalar CableOrSatelliteServiceInput
scalar AudienceInput
scalar WarrantyScopeInput
scalar MusicCompositionInput
scalar OpeningHoursSpecificationInput
scalar DayOfWeekInput

`;

schema = makeExecutableSchema({ typeDefs, resolvers });

module.exports = { 
  AnyInput,
  DatasetInput,
  ProductInput,
  ActionInput,
  EntryPointInput,
  ThingInput,
  ServiceInput,
  AdministrativeAreaInput,
  LocationFeatureSpecificationInput,
  VideoObjectInput,
  EventInput,
  LanguageInput,
  PhysicalActivityCategoryInput,
  ProductModelInput,
  PostalAddressInput,
  PlaceInput,
  AudioObjectInput,
  AlignmentObjectInput,
  CommentInput,
  ImageObjectInput,
  ActionStatusTypeInput,
  PersonInput,
  ContactPointInput,
  OccupationInput,
  MonetaryAmountInput,
  EducationalOrganizationInput,
  CorrectionCommentInput,
  BrandInput,
  GeoCoordinatesInput,
  GeoShapeInput,
  MapInput,
  QualitativeValueInput,
  MonetaryAmountDistributionInput,
  SoftwareApplicationInput,
  DataFeedInput,
  DataFeedItemInput,
  OfferInput,
  TypeAndQuantityNodeInput,
  ItemAvailabilityInput,
  BusinessEntityTypeInput,
  PaymentMethodInput,
  MediaObjectInput,
  OrganizationInput,
  InteractionCounterInput,
  GeospatialGeometryInput,
  ContactPointOptionInput,
  AggregateRatingInput,
  ServiceChannelInput,
  CreativeWorkInput,
  StructuredValueInput,
  DataDownloadInput,
  GenderTypeInput,
  DemandInput,
  PriceSpecificationInput,
  ProgramMembershipInput,
  CountryInput,
  DeliveryMethodInput,
  ClassInput,
  DistanceInput,
  BusinessFunctionInput,
  LoanOrCreditInput,
  RepaymentSpecificationInput,
  MediaSubscriptionInput,
  ClipInput,
  EpisodeInput,
  CreativeWorkSeriesInput,
  CreativeWorkSeasonInput,
  WarrantyPromiseInput,
  DurationInput,
  MusicGroupInput,
  ItemListInput,
  ListItemInput,
  MusicAlbumInput,
  MusicReleaseInput,
  MusicAlbumReleaseTypeInput,
  MusicAlbumProductionTypeInput,
  DataCatalogInput,
  NewsArticleInput,
  SpeakableSpecificationInput,
  QuantitativeValueInput,
  PropertyInput,
  ArticleInput,
  OfferItemConditionInput,
  AboutPageInput,
  SpecialtyInput,
  BreadcrumbListInput,
  EnumerationInput,
  EducationalOccupationalCredentialInput,
  WebSiteInput,
  OfferCatalogInput,
  DefinedTermInput,
  DefinedTermSetInput,
  RatingInput,
  OwnershipInfoInput,
  ReviewInput,
  MapCategoryTypeInput,
  WebPageElementInput,
  PhotographInput,
  MusicReleaseFormatTypeInput,
  EventStatusTypeInput,
  PublicationEventInput,
  BroadcastServiceInput,
  BroadcastFrequencySpecificationInput,
  BroadcastChannelInput,
  MusicRecordingInput,
  ItemListOrderTypeInput,
  MusicPlaylistInput,
  QuestionInput,
  AnswerInput,
  CableOrSatelliteServiceInput,
  AudienceInput,
  WarrantyScopeInput,
  MusicCompositionInput,
  OpeningHoursSpecificationInput,
  DayOfWeekInput,

};
