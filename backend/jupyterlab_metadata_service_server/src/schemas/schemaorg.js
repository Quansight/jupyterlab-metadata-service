
const {
  GraphQLObjectType,
  GraphQLList,
  GraphQLString,
  GraphQLBoolean,
  GraphQLInt,
  GraphQLFloat,
  GraphQLUnionType
} = require('graphql');


const Dataset = new GraphQLObjectType({
  name: 'Dataset',
  fields: () => ({
    distribution: { type: GraphQLList(DataDownload) },
    includedInDataCatalog: { type: GraphQLList(DataCatalog) },
    issn: { type: GraphQLList(GraphQLString) },
    measurementTechnique: { type: GraphQLList(GraphQLString) },
    variableMeasured: { type: GraphQLList(GraphQLString) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const QuantitativeValue = new GraphQLObjectType({
  name: 'QuantitativeValue',
  fields: () => ({
    additionalProperty: { type: GraphQLList(GraphQLString) },
    maxValue: { type: GraphQLList(GraphQLFloat) },
    minValue: { type: GraphQLList(GraphQLFloat) },
    unitCode: { type: GraphQLList(GraphQLString) },
    unitText: { type: GraphQLList(GraphQLString) },
    value: { type: GraphQLList(StructuredValue) },
    valueReference: { type: GraphQLList(valueReference) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Person = new GraphQLObjectType({
  name: 'Person',
  fields: () => ({
    additionalName: { type: GraphQLList(GraphQLString) },
    address: { type: GraphQLList(PostalAddress) },
    affiliation: { type: GraphQLList(Organization) },
    alumniOf: { type: GraphQLList(alumniOf) },
    award: { type: GraphQLList(GraphQLString) },
    birthDate: { type: GraphQLList(GraphQLString) },
    birthPlace: { type: GraphQLList(Place) },
    brand: { type: GraphQLList(brand) },
    children: { type: GraphQLList(Person) },
    colleague: { type: GraphQLList(Person) },
    contactPoint: { type: GraphQLList(ContactPoint) },
    deathDate: { type: GraphQLList(GraphQLString) },
    deathPlace: { type: GraphQLList(Place) },
    duns: { type: GraphQLList(GraphQLString) },
    email: { type: GraphQLList(GraphQLString) },
    familyName: { type: GraphQLList(GraphQLString) },
    faxNumber: { type: GraphQLList(GraphQLString) },
    follows: { type: GraphQLList(Person) },
    funder: { type: GraphQLList(funder) },
    gender: { type: GraphQLList(GenderType) },
    givenName: { type: GraphQLList(GraphQLString) },
    globalLocationNumber: { type: GraphQLList(GraphQLString) },
    hasOccupation: { type: GraphQLList(Occupation) },
    hasOfferCatalog: { type: GraphQLList(OfferCatalog) },
    hasPOS: { type: GraphQLList(Place) },
    height: { type: GraphQLList(height) },
    homeLocation: { type: GraphQLList(homeLocation) },
    honorificPrefix: { type: GraphQLList(GraphQLString) },
    honorificSuffix: { type: GraphQLList(GraphQLString) },
    isicV4: { type: GraphQLList(GraphQLString) },
    jobTitle: { type: GraphQLList(GraphQLString) },
    knows: { type: GraphQLList(Person) },
    knowsAbout: { type: GraphQLList(Thing) },
    knowsLanguage: { type: GraphQLList(Language) },
    makesOffer: { type: GraphQLList(Offer) },
    memberOf: { type: GraphQLList(memberOf) },
    naics: { type: GraphQLList(GraphQLString) },
    nationality: { type: GraphQLList(Country) },
    netWorth: { type: GraphQLList(netWorth) },
    owns: { type: GraphQLList(owns) },
    parent: { type: GraphQLList(Person) },
    performerIn: { type: GraphQLList(Event) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    relatedTo: { type: GraphQLList(Person) },
    seeks: { type: GraphQLList(Demand) },
    sibling: { type: GraphQLList(Person) },
    sponsor: { type: GraphQLList(sponsor) },
    spouse: { type: GraphQLList(Person) },
    taxID: { type: GraphQLList(GraphQLString) },
    telephone: { type: GraphQLList(GraphQLString) },
    vatID: { type: GraphQLList(GraphQLString) },
    weight: { type: GraphQLList(QuantitativeValue) },
    workLocation: { type: GraphQLList(workLocation) },
    worksFor: { type: GraphQLList(Organization) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Review = new GraphQLObjectType({
  name: 'Review',
  fields: () => ({
    itemReviewed: { type: GraphQLList(Thing) },
    reviewAspect: { type: GraphQLList(GraphQLString) },
    reviewBody: { type: GraphQLList(GraphQLString) },
    reviewRating: { type: GraphQLList(Rating) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Event = new GraphQLObjectType({
  name: 'Event',
  fields: () => ({
    about: { type: GraphQLList(Thing) },
    actor: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    attendee: { type: GraphQLList(attendee) },
    audience: { type: GraphQLList(Audience) },
    composer: { type: GraphQLList(composer) },
    contributor: { type: GraphQLList(contributor) },
    director: { type: GraphQLList(Person) },
    doorTime: { type: GraphQLList(GraphQLString) },
    duration: { type: GraphQLList(Duration) },
    endDate: { type: GraphQLList(GraphQLString) },
    eventStatus: { type: GraphQLList(EventStatusType) },
    funder: { type: GraphQLList(funder) },
    inLanguage: { type: GraphQLList(Language) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    location: { type: GraphQLList(location) },
    maximumAttendeeCapacity: { type: GraphQLList(GraphQLInt) },
    offers: { type: GraphQLList(Offer) },
    organizer: { type: GraphQLList(organizer) },
    performer: { type: GraphQLList(performer) },
    previousStartDate: { type: GraphQLList(GraphQLString) },
    recordedIn: { type: GraphQLList(CreativeWork) },
    remainingAttendeeCapacity: { type: GraphQLList(GraphQLInt) },
    review: { type: GraphQLList(Review) },
    sponsor: { type: GraphQLList(sponsor) },
    startDate: { type: GraphQLList(GraphQLString) },
    subEvent: { type: GraphQLList(Event) },
    superEvent: { type: GraphQLList(Event) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    workFeatured: { type: GraphQLList(CreativeWork) },
    workPerformed: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Clip = new GraphQLObjectType({
  name: 'Clip',
  fields: () => ({
    actor: { type: GraphQLList(Person) },
    clipNumber: { type: GraphQLList(GraphQLString) },
    director: { type: GraphQLList(Person) },
    endOffset: { type: GraphQLList(GraphQLFloat) },
    musicBy: { type: GraphQLList(musicBy) },
    partOfEpisode: { type: GraphQLList(Episode) },
    partOfSeason: { type: GraphQLList(CreativeWorkSeason) },
    partOfSeries: { type: GraphQLList(CreativeWorkSeries) },
    startOffset: { type: GraphQLList(GraphQLFloat) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Product = new GraphQLObjectType({
  name: 'Product',
  fields: () => ({
    additionalProperty: { type: GraphQLList(GraphQLString) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    audience: { type: GraphQLList(Audience) },
    award: { type: GraphQLList(GraphQLString) },
    brand: { type: GraphQLList(brand) },
    category: { type: GraphQLList(category) },
    color: { type: GraphQLList(GraphQLString) },
    depth: { type: GraphQLList(depth) },
    gtin12: { type: GraphQLList(GraphQLString) },
    gtin13: { type: GraphQLList(GraphQLString) },
    gtin14: { type: GraphQLList(GraphQLString) },
    gtin8: { type: GraphQLList(GraphQLString) },
    height: { type: GraphQLList(height) },
    isAccessoryOrSparePartFor: { type: GraphQLList(Product) },
    isConsumableFor: { type: GraphQLList(Product) },
    isRelatedTo: { type: GraphQLList(isRelatedTo) },
    isSimilarTo: { type: GraphQLList(isSimilarTo) },
    itemCondition: { type: GraphQLList(OfferItemCondition) },
    logo: { type: GraphQLList(ImageObject) },
    manufacturer: { type: GraphQLList(Organization) },
    material: { type: GraphQLList(Product) },
    model: { type: GraphQLList(ProductModel) },
    mpn: { type: GraphQLList(GraphQLString) },
    nsn: { type: GraphQLList(GraphQLString) },
    offers: { type: GraphQLList(Offer) },
    productID: { type: GraphQLList(GraphQLString) },
    productionDate: { type: GraphQLList(GraphQLString) },
    purchaseDate: { type: GraphQLList(GraphQLString) },
    releaseDate: { type: GraphQLList(GraphQLString) },
    review: { type: GraphQLList(Review) },
    sku: { type: GraphQLList(GraphQLString) },
    slogan: { type: GraphQLList(GraphQLString) },
    weight: { type: GraphQLList(QuantitativeValue) },
    width: { type: GraphQLList(width) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Service = new GraphQLObjectType({
  name: 'Service',
  fields: () => ({
    aggregateRating: { type: GraphQLList(AggregateRating) },
    areaServed: { type: GraphQLList(areaServed) },
    audience: { type: GraphQLList(Audience) },
    availableChannel: { type: GraphQLList(ServiceChannel) },
    award: { type: GraphQLList(GraphQLString) },
    brand: { type: GraphQLList(brand) },
    broker: { type: GraphQLList(broker) },
    category: { type: GraphQLList(category) },
    hasOfferCatalog: { type: GraphQLList(OfferCatalog) },
    hoursAvailable: { type: GraphQLList(OpeningHoursSpecification) },
    isRelatedTo: { type: GraphQLList(isRelatedTo) },
    isSimilarTo: { type: GraphQLList(isSimilarTo) },
    logo: { type: GraphQLList(ImageObject) },
    offers: { type: GraphQLList(Offer) },
    provider: { type: GraphQLList(provider) },
    providerMobility: { type: GraphQLList(GraphQLString) },
    review: { type: GraphQLList(Review) },
    serviceOutput: { type: GraphQLList(Thing) },
    serviceType: { type: GraphQLList(GraphQLString) },
    slogan: { type: GraphQLList(GraphQLString) },
    termsOfService: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const GeoShape = new GraphQLObjectType({
  name: 'GeoShape',
  fields: () => ({
    address: { type: GraphQLList(PostalAddress) },
    addressCountry: { type: GraphQLList(Country) },
    box: { type: GraphQLList(GraphQLString) },
    circle: { type: GraphQLList(GraphQLString) },
    elevation: { type: GraphQLList(GraphQLString) },
    line: { type: GraphQLList(GraphQLString) },
    polygon: { type: GraphQLList(GraphQLString) },
    postalCode: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const OpeningHoursSpecification = new GraphQLObjectType({
  name: 'OpeningHoursSpecification',
  fields: () => ({
    closes: { type: GraphQLList(GraphQLString) },
    dayOfWeek: { type: GraphQLList(DayOfWeek) },
    opens: { type: GraphQLList(GraphQLString) },
    validFrom: { type: GraphQLList(GraphQLString) },
    validThrough: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const DataDownload = new GraphQLObjectType({
  name: 'DataDownload',
  fields: () => ({
    measurementTechnique: { type: GraphQLList(GraphQLString) },
    associatedArticle: { type: GraphQLList(NewsArticle) },
    bitrate: { type: GraphQLList(GraphQLString) },
    contentSize: { type: GraphQLList(GraphQLString) },
    contentUrl: { type: GraphQLList(GraphQLString) },
    duration: { type: GraphQLList(Duration) },
    embedUrl: { type: GraphQLList(GraphQLString) },
    encodesCreativeWork: { type: GraphQLList(CreativeWork) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    endTime: { type: GraphQLList(GraphQLString) },
    height: { type: GraphQLList(height) },
    playerType: { type: GraphQLList(GraphQLString) },
    productionCompany: { type: GraphQLList(Organization) },
    regionsAllowed: { type: GraphQLList(Place) },
    requiresSubscription: { type: GraphQLList(MediaSubscription) },
    startTime: { type: GraphQLList(GraphQLString) },
    uploadDate: { type: GraphQLList(GraphQLString) },
    width: { type: GraphQLList(width) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Rating = new GraphQLObjectType({
  name: 'Rating',
  fields: () => ({
    author: { type: GraphQLList(author) },
    bestRating: { type: GraphQLList(GraphQLString) },
    ratingValue: { type: GraphQLList(GraphQLString) },
    reviewAspect: { type: GraphQLList(GraphQLString) },
    worstRating: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const ImageObject = new GraphQLObjectType({
  name: 'ImageObject',
  fields: () => ({
    caption: { type: GraphQLList(MediaObject) },
    exifData: { type: GraphQLList(GraphQLString) },
    representativeOfPage: { type: GraphQLList(GraphQLBoolean) },
    thumbnail: { type: GraphQLList(ImageObject) },
    associatedArticle: { type: GraphQLList(NewsArticle) },
    bitrate: { type: GraphQLList(GraphQLString) },
    contentSize: { type: GraphQLList(GraphQLString) },
    contentUrl: { type: GraphQLList(GraphQLString) },
    duration: { type: GraphQLList(Duration) },
    embedUrl: { type: GraphQLList(GraphQLString) },
    encodesCreativeWork: { type: GraphQLList(CreativeWork) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    endTime: { type: GraphQLList(GraphQLString) },
    height: { type: GraphQLList(height) },
    playerType: { type: GraphQLList(GraphQLString) },
    productionCompany: { type: GraphQLList(Organization) },
    regionsAllowed: { type: GraphQLList(Place) },
    requiresSubscription: { type: GraphQLList(MediaSubscription) },
    startTime: { type: GraphQLList(GraphQLString) },
    uploadDate: { type: GraphQLList(GraphQLString) },
    width: { type: GraphQLList(width) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const GenderType = new GraphQLObjectType({
  name: 'GenderType',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const PublicationEvent = new GraphQLObjectType({
  name: 'PublicationEvent',
  fields: () => ({
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    publishedBy: { type: GraphQLList(publishedBy) },
    publishedOn: { type: GraphQLList(BroadcastService) },
    about: { type: GraphQLList(Thing) },
    actor: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    attendee: { type: GraphQLList(attendee) },
    audience: { type: GraphQLList(Audience) },
    composer: { type: GraphQLList(composer) },
    contributor: { type: GraphQLList(contributor) },
    director: { type: GraphQLList(Person) },
    doorTime: { type: GraphQLList(GraphQLString) },
    duration: { type: GraphQLList(Duration) },
    endDate: { type: GraphQLList(GraphQLString) },
    eventStatus: { type: GraphQLList(EventStatusType) },
    funder: { type: GraphQLList(funder) },
    inLanguage: { type: GraphQLList(Language) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    location: { type: GraphQLList(location) },
    maximumAttendeeCapacity: { type: GraphQLList(GraphQLInt) },
    offers: { type: GraphQLList(Offer) },
    organizer: { type: GraphQLList(organizer) },
    performer: { type: GraphQLList(performer) },
    previousStartDate: { type: GraphQLList(GraphQLString) },
    recordedIn: { type: GraphQLList(CreativeWork) },
    remainingAttendeeCapacity: { type: GraphQLList(GraphQLInt) },
    review: { type: GraphQLList(Review) },
    sponsor: { type: GraphQLList(sponsor) },
    startDate: { type: GraphQLList(GraphQLString) },
    subEvent: { type: GraphQLList(Event) },
    superEvent: { type: GraphQLList(Event) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    workFeatured: { type: GraphQLList(CreativeWork) },
    workPerformed: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const PriceSpecification = new GraphQLObjectType({
  name: 'PriceSpecification',
  fields: () => ({
    eligibleQuantity: { type: GraphQLList(QuantitativeValue) },
    eligibleTransactionVolume: { type: GraphQLList(PriceSpecification) },
    maxPrice: { type: GraphQLList(GraphQLFloat) },
    minPrice: { type: GraphQLList(GraphQLFloat) },
    price: { type: GraphQLList(GraphQLString) },
    priceCurrency: { type: GraphQLList(GraphQLString) },
    validFrom: { type: GraphQLList(GraphQLString) },
    validThrough: { type: GraphQLList(GraphQLString) },
    valueAddedTaxIncluded: { type: GraphQLList(GraphQLBoolean) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Brand = new GraphQLObjectType({
  name: 'Brand',
  fields: () => ({
    aggregateRating: { type: GraphQLList(AggregateRating) },
    logo: { type: GraphQLList(ImageObject) },
    review: { type: GraphQLList(Review) },
    slogan: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const ProductModel = new GraphQLObjectType({
  name: 'ProductModel',
  fields: () => ({
    isVariantOf: { type: GraphQLList(ProductModel) },
    predecessorOf: { type: GraphQLList(ProductModel) },
    successorOf: { type: GraphQLList(ProductModel) },
    additionalProperty: { type: GraphQLList(GraphQLString) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    audience: { type: GraphQLList(Audience) },
    award: { type: GraphQLList(GraphQLString) },
    brand: { type: GraphQLList(brand) },
    category: { type: GraphQLList(category) },
    color: { type: GraphQLList(GraphQLString) },
    depth: { type: GraphQLList(depth) },
    gtin12: { type: GraphQLList(GraphQLString) },
    gtin13: { type: GraphQLList(GraphQLString) },
    gtin14: { type: GraphQLList(GraphQLString) },
    gtin8: { type: GraphQLList(GraphQLString) },
    height: { type: GraphQLList(height) },
    isAccessoryOrSparePartFor: { type: GraphQLList(Product) },
    isConsumableFor: { type: GraphQLList(Product) },
    isRelatedTo: { type: GraphQLList(isRelatedTo) },
    isSimilarTo: { type: GraphQLList(isSimilarTo) },
    itemCondition: { type: GraphQLList(OfferItemCondition) },
    logo: { type: GraphQLList(ImageObject) },
    manufacturer: { type: GraphQLList(Organization) },
    material: { type: GraphQLList(Product) },
    model: { type: GraphQLList(ProductModel) },
    mpn: { type: GraphQLList(GraphQLString) },
    nsn: { type: GraphQLList(GraphQLString) },
    offers: { type: GraphQLList(Offer) },
    productID: { type: GraphQLList(GraphQLString) },
    productionDate: { type: GraphQLList(GraphQLString) },
    purchaseDate: { type: GraphQLList(GraphQLString) },
    releaseDate: { type: GraphQLList(GraphQLString) },
    review: { type: GraphQLList(Review) },
    sku: { type: GraphQLList(GraphQLString) },
    slogan: { type: GraphQLList(GraphQLString) },
    weight: { type: GraphQLList(QuantitativeValue) },
    width: { type: GraphQLList(width) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Offer = new GraphQLObjectType({
  name: 'Offer',
  fields: () => ({
    acceptedPaymentMethod: { type: GraphQLList(acceptedPaymentMethod) },
    addOn: { type: GraphQLList(Offer) },
    advanceBookingRequirement: { type: GraphQLList(QuantitativeValue) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    areaServed: { type: GraphQLList(areaServed) },
    availability: { type: GraphQLList(ItemAvailability) },
    availabilityEnds: { type: GraphQLList(GraphQLString) },
    availabilityStarts: { type: GraphQLList(GraphQLString) },
    availableAtOrFrom: { type: GraphQLList(Place) },
    availableDeliveryMethod: { type: GraphQLList(DeliveryMethod) },
    businessFunction: { type: GraphQLList(BusinessFunction) },
    category: { type: GraphQLList(category) },
    deliveryLeadTime: { type: GraphQLList(QuantitativeValue) },
    eligibleCustomerType: { type: GraphQLList(BusinessEntityType) },
    eligibleDuration: { type: GraphQLList(QuantitativeValue) },
    eligibleQuantity: { type: GraphQLList(QuantitativeValue) },
    eligibleRegion: { type: GraphQLList(eligibleRegion) },
    eligibleTransactionVolume: { type: GraphQLList(PriceSpecification) },
    gtin12: { type: GraphQLList(GraphQLString) },
    gtin13: { type: GraphQLList(GraphQLString) },
    gtin14: { type: GraphQLList(GraphQLString) },
    gtin8: { type: GraphQLList(GraphQLString) },
    includesObject: { type: GraphQLList(TypeAndQuantityNode) },
    ineligibleRegion: { type: GraphQLList(ineligibleRegion) },
    inventoryLevel: { type: GraphQLList(QuantitativeValue) },
    itemCondition: { type: GraphQLList(OfferItemCondition) },
    itemOffered: { type: GraphQLList(itemOffered) },
    mpn: { type: GraphQLList(GraphQLString) },
    offeredBy: { type: GraphQLList(offeredBy) },
    price: { type: GraphQLList(GraphQLString) },
    priceCurrency: { type: GraphQLList(GraphQLString) },
    priceSpecification: { type: GraphQLList(PriceSpecification) },
    priceValidUntil: { type: GraphQLList(GraphQLString) },
    review: { type: GraphQLList(Review) },
    seller: { type: GraphQLList(seller) },
    serialNumber: { type: GraphQLList(GraphQLString) },
    sku: { type: GraphQLList(GraphQLString) },
    validFrom: { type: GraphQLList(GraphQLString) },
    validThrough: { type: GraphQLList(GraphQLString) },
    warranty: { type: GraphQLList(WarrantyPromise) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const TypeAndQuantityNode = new GraphQLObjectType({
  name: 'TypeAndQuantityNode',
  fields: () => ({
    amountOfThisGood: { type: GraphQLList(GraphQLFloat) },
    businessFunction: { type: GraphQLList(BusinessFunction) },
    typeOfGood: { type: GraphQLList(typeOfGood) },
    unitCode: { type: GraphQLList(GraphQLString) },
    unitText: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const BusinessEntityType = new GraphQLObjectType({
  name: 'BusinessEntityType',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const PaymentMethod = new GraphQLObjectType({
  name: 'PaymentMethod',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const QualitativeValue = new GraphQLObjectType({
  name: 'QualitativeValue',
  fields: () => ({
    additionalProperty: { type: GraphQLList(GraphQLString) },
    equal: { type: GraphQLList(QualitativeValue) },
    greater: { type: GraphQLList(QualitativeValue) },
    greaterOrEqual: { type: GraphQLList(QualitativeValue) },
    lesser: { type: GraphQLList(QualitativeValue) },
    lesserOrEqual: { type: GraphQLList(QualitativeValue) },
    nonEqual: { type: GraphQLList(QualitativeValue) },
    valueReference: { type: GraphQLList(valueReference) },
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const InteractionCounter = new GraphQLObjectType({
  name: 'InteractionCounter',
  fields: () => ({
    interactionService: { type: GraphQLList(interactionService) },
    interactionType: { type: GraphQLList(Action) },
    userInteractionCount: { type: GraphQLList(GraphQLInt) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Duration = new GraphQLObjectType({
  name: 'Duration',
  fields: () => ({
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const AdministrativeArea = new GraphQLObjectType({
  name: 'AdministrativeArea',
  fields: () => ({
    additionalProperty: { type: GraphQLList(GraphQLString) },
    address: { type: GraphQLList(PostalAddress) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    amenityFeature: { type: GraphQLList(LocationFeatureSpecification) },
    branchCode: { type: GraphQLList(GraphQLString) },
    containedInPlace: { type: GraphQLList(Place) },
    containsPlace: { type: GraphQLList(Place) },
    event: { type: GraphQLList(Event) },
    faxNumber: { type: GraphQLList(GraphQLString) },
    geo: { type: GraphQLList(geo) },
    geoContains: { type: GraphQLList(geoContains) },
    geoCoveredBy: { type: GraphQLList(geoCoveredBy) },
    geoCovers: { type: GraphQLList(geoCovers) },
    geoCrosses: { type: GraphQLList(geoCrosses) },
    geoDisjoint: { type: GraphQLList(geoDisjoint) },
    geoEquals: { type: GraphQLList(geoEquals) },
    geoIntersects: { type: GraphQLList(geoIntersects) },
    geoOverlaps: { type: GraphQLList(geoOverlaps) },
    geoTouches: { type: GraphQLList(geoTouches) },
    geoWithin: { type: GraphQLList(geoWithin) },
    globalLocationNumber: { type: GraphQLList(GraphQLString) },
    hasMap: { type: GraphQLList(Map) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isicV4: { type: GraphQLList(GraphQLString) },
    logo: { type: GraphQLList(ImageObject) },
    maximumAttendeeCapacity: { type: GraphQLList(GraphQLInt) },
    openingHoursSpecification: { type: GraphQLList(OpeningHoursSpecification) },
    photo: { type: GraphQLList(photo) },
    publicAccess: { type: GraphQLList(GraphQLBoolean) },
    review: { type: GraphQLList(Review) },
    slogan: { type: GraphQLList(GraphQLString) },
    smokingAllowed: { type: GraphQLList(GraphQLBoolean) },
    specialOpeningHoursSpecification: { type: GraphQLList(OpeningHoursSpecification) },
    telephone: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const GeospatialGeometry = new GraphQLObjectType({
  name: 'GeospatialGeometry',
  fields: () => ({
    geoContains: { type: GraphQLList(geoContains) },
    geoCoveredBy: { type: GraphQLList(geoCoveredBy) },
    geoCovers: { type: GraphQLList(geoCovers) },
    geoCrosses: { type: GraphQLList(geoCrosses) },
    geoDisjoint: { type: GraphQLList(geoDisjoint) },
    geoEquals: { type: GraphQLList(geoEquals) },
    geoIntersects: { type: GraphQLList(geoIntersects) },
    geoOverlaps: { type: GraphQLList(geoOverlaps) },
    geoTouches: { type: GraphQLList(geoTouches) },
    geoWithin: { type: GraphQLList(geoWithin) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const CreativeWorkSeries = new GraphQLObjectType({
  name: 'CreativeWorkSeries',
  fields: () => ({
    endDate: { type: GraphQLList(GraphQLString) },
    issn: { type: GraphQLList(GraphQLString) },
    startDate: { type: GraphQLList(GraphQLString) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const GeoCoordinates = new GraphQLObjectType({
  name: 'GeoCoordinates',
  fields: () => ({
    address: { type: GraphQLList(PostalAddress) },
    addressCountry: { type: GraphQLList(Country) },
    elevation: { type: GraphQLList(GraphQLString) },
    latitude: { type: GraphQLList(GraphQLString) },
    longitude: { type: GraphQLList(GraphQLString) },
    postalCode: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const MusicGroup = new GraphQLObjectType({
  name: 'MusicGroup',
  fields: () => ({
    album: { type: GraphQLList(MusicAlbum) },
    genre: { type: GraphQLList(GraphQLString) },
    track: { type: GraphQLList(track) },
    actionableFeedbackPolicy: { type: GraphQLList(CreativeWork) },
    address: { type: GraphQLList(PostalAddress) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alumni: { type: GraphQLList(Person) },
    areaServed: { type: GraphQLList(areaServed) },
    award: { type: GraphQLList(GraphQLString) },
    brand: { type: GraphQLList(brand) },
    contactPoint: { type: GraphQLList(ContactPoint) },
    correctionsPolicy: { type: GraphQLList(CreativeWork) },
    department: { type: GraphQLList(Organization) },
    dissolutionDate: { type: GraphQLList(GraphQLString) },
    diversityPolicy: { type: GraphQLList(CreativeWork) },
    diversityStaffingReport: { type: GraphQLList(Article) },
    duns: { type: GraphQLList(GraphQLString) },
    email: { type: GraphQLList(GraphQLString) },
    employee: { type: GraphQLList(Person) },
    ethicsPolicy: { type: GraphQLList(CreativeWork) },
    event: { type: GraphQLList(Event) },
    faxNumber: { type: GraphQLList(GraphQLString) },
    founder: { type: GraphQLList(Person) },
    foundingDate: { type: GraphQLList(GraphQLString) },
    foundingLocation: { type: GraphQLList(Place) },
    funder: { type: GraphQLList(funder) },
    globalLocationNumber: { type: GraphQLList(GraphQLString) },
    hasOfferCatalog: { type: GraphQLList(OfferCatalog) },
    hasPOS: { type: GraphQLList(Place) },
    isicV4: { type: GraphQLList(GraphQLString) },
    knowsAbout: { type: GraphQLList(Thing) },
    knowsLanguage: { type: GraphQLList(Language) },
    legalName: { type: GraphQLList(GraphQLString) },
    leiCode: { type: GraphQLList(GraphQLString) },
    location: { type: GraphQLList(location) },
    logo: { type: GraphQLList(ImageObject) },
    makesOffer: { type: GraphQLList(Offer) },
    member: { type: GraphQLList(member) },
    memberOf: { type: GraphQLList(memberOf) },
    naics: { type: GraphQLList(GraphQLString) },
    numberOfEmployees: { type: GraphQLList(QuantitativeValue) },
    ownershipFundingInfo: { type: GraphQLList(ownershipFundingInfo) },
    owns: { type: GraphQLList(owns) },
    parentOrganization: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    review: { type: GraphQLList(Review) },
    seeks: { type: GraphQLList(Demand) },
    slogan: { type: GraphQLList(GraphQLString) },
    sponsor: { type: GraphQLList(sponsor) },
    subOrganization: { type: GraphQLList(Organization) },
    taxID: { type: GraphQLList(GraphQLString) },
    telephone: { type: GraphQLList(GraphQLString) },
    unnamedSourcesPolicy: { type: GraphQLList(CreativeWork) },
    vatID: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const ItemList = new GraphQLObjectType({
  name: 'ItemList',
  fields: () => ({
    itemListElement: { type: GraphQLList(itemListElement) },
    itemListOrder: { type: GraphQLList(ItemListOrderType) },
    numberOfItems: { type: GraphQLList(GraphQLInt) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const AboutPage = new GraphQLObjectType({
  name: 'AboutPage',
  fields: () => ({
    breadcrumb: { type: GraphQLList(BreadcrumbList) },
    lastReviewed: { type: GraphQLList(GraphQLString) },
    mainContentOfPage: { type: GraphQLList(WebPageElement) },
    primaryImageOfPage: { type: GraphQLList(ImageObject) },
    relatedLink: { type: GraphQLList(GraphQLString) },
    reviewedBy: { type: GraphQLList(reviewedBy) },
    significantLink: { type: GraphQLList(GraphQLString) },
    speakable: { type: GraphQLList(SpeakableSpecification) },
    specialty: { type: GraphQLList(Specialty) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const BreadcrumbList = new GraphQLObjectType({
  name: 'BreadcrumbList',
  fields: () => ({
    itemListElement: { type: GraphQLList(itemListElement) },
    itemListOrder: { type: GraphQLList(ItemListOrderType) },
    numberOfItems: { type: GraphQLList(GraphQLInt) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const WebPageElement = new GraphQLObjectType({
  name: 'WebPageElement',
  fields: () => ({
    cssSelector: { type: GraphQLList(GraphQLString) },
    xpath: { type: GraphQLList(GraphQLString) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Specialty = new GraphQLObjectType({
  name: 'Specialty',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const SpeakableSpecification = new GraphQLObjectType({
  name: 'SpeakableSpecification',
  fields: () => ({
    cssSelector: { type: GraphQLList(GraphQLString) },
    xpath: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const AlignmentObject = new GraphQLObjectType({
  name: 'AlignmentObject',
  fields: () => ({
    alignmentType: { type: GraphQLList(GraphQLString) },
    educationalFramework: { type: GraphQLList(GraphQLString) },
    targetDescription: { type: GraphQLList(GraphQLString) },
    targetName: { type: GraphQLList(GraphQLString) },
    targetUrl: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const StructuredValue = new GraphQLObjectType({
  name: 'StructuredValue',
  fields: () => ({
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const CreativeWorkSeason = new GraphQLObjectType({
  name: 'CreativeWorkSeason',
  fields: () => ({
    actor: { type: GraphQLList(Person) },
    director: { type: GraphQLList(Person) },
    endDate: { type: GraphQLList(GraphQLString) },
    episode: { type: GraphQLList(Episode) },
    numberOfEpisodes: { type: GraphQLList(GraphQLInt) },
    partOfSeries: { type: GraphQLList(CreativeWorkSeries) },
    productionCompany: { type: GraphQLList(Organization) },
    seasonNumber: { type: GraphQLList(GraphQLString) },
    startDate: { type: GraphQLList(GraphQLString) },
    trailer: { type: GraphQLList(VideoObject) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const DeliveryMethod = new GraphQLObjectType({
  name: 'DeliveryMethod',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Demand = new GraphQLObjectType({
  name: 'Demand',
  fields: () => ({
    acceptedPaymentMethod: { type: GraphQLList(acceptedPaymentMethod) },
    advanceBookingRequirement: { type: GraphQLList(QuantitativeValue) },
    areaServed: { type: GraphQLList(areaServed) },
    availability: { type: GraphQLList(ItemAvailability) },
    availabilityEnds: { type: GraphQLList(GraphQLString) },
    availabilityStarts: { type: GraphQLList(GraphQLString) },
    availableAtOrFrom: { type: GraphQLList(Place) },
    availableDeliveryMethod: { type: GraphQLList(DeliveryMethod) },
    businessFunction: { type: GraphQLList(BusinessFunction) },
    deliveryLeadTime: { type: GraphQLList(QuantitativeValue) },
    eligibleCustomerType: { type: GraphQLList(BusinessEntityType) },
    eligibleDuration: { type: GraphQLList(QuantitativeValue) },
    eligibleQuantity: { type: GraphQLList(QuantitativeValue) },
    eligibleRegion: { type: GraphQLList(eligibleRegion) },
    eligibleTransactionVolume: { type: GraphQLList(PriceSpecification) },
    gtin12: { type: GraphQLList(GraphQLString) },
    gtin13: { type: GraphQLList(GraphQLString) },
    gtin14: { type: GraphQLList(GraphQLString) },
    gtin8: { type: GraphQLList(GraphQLString) },
    includesObject: { type: GraphQLList(TypeAndQuantityNode) },
    ineligibleRegion: { type: GraphQLList(ineligibleRegion) },
    inventoryLevel: { type: GraphQLList(QuantitativeValue) },
    itemCondition: { type: GraphQLList(OfferItemCondition) },
    itemOffered: { type: GraphQLList(itemOffered) },
    mpn: { type: GraphQLList(GraphQLString) },
    priceSpecification: { type: GraphQLList(PriceSpecification) },
    seller: { type: GraphQLList(seller) },
    serialNumber: { type: GraphQLList(GraphQLString) },
    sku: { type: GraphQLList(GraphQLString) },
    validFrom: { type: GraphQLList(GraphQLString) },
    validThrough: { type: GraphQLList(GraphQLString) },
    warranty: { type: GraphQLList(WarrantyPromise) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const EventStatusType = new GraphQLObjectType({
  name: 'EventStatusType',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const OfferItemCondition = new GraphQLObjectType({
  name: 'OfferItemCondition',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Photograph = new GraphQLObjectType({
  name: 'Photograph',
  fields: () => ({
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Enumeration = new GraphQLObjectType({
  name: 'Enumeration',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Occupation = new GraphQLObjectType({
  name: 'Occupation',
  fields: () => ({
    educationRequirements: { type: GraphQLList(EducationalOccupationalCredential) },
    estimatedSalary: { type: GraphQLList(MonetaryAmountDistribution) },
    experienceRequirements: { type: GraphQLList(GraphQLString) },
    occupationLocation: { type: GraphQLList(AdministrativeArea) },
    occupationalCategory: { type: GraphQLList(GraphQLString) },
    qualifications: { type: GraphQLList(EducationalOccupationalCredential) },
    responsibilities: { type: GraphQLList(GraphQLString) },
    skills: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Episode = new GraphQLObjectType({
  name: 'Episode',
  fields: () => ({
    actor: { type: GraphQLList(Person) },
    director: { type: GraphQLList(Person) },
    episodeNumber: { type: GraphQLList(GraphQLString) },
    musicBy: { type: GraphQLList(musicBy) },
    partOfSeason: { type: GraphQLList(CreativeWorkSeason) },
    partOfSeries: { type: GraphQLList(CreativeWorkSeries) },
    productionCompany: { type: GraphQLList(Organization) },
    trailer: { type: GraphQLList(VideoObject) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const LocationFeatureSpecification = new GraphQLObjectType({
  name: 'LocationFeatureSpecification',
  fields: () => ({
    hoursAvailable: { type: GraphQLList(OpeningHoursSpecification) },
    validFrom: { type: GraphQLList(GraphQLString) },
    validThrough: { type: GraphQLList(GraphQLString) },
    maxValue: { type: GraphQLList(GraphQLFloat) },
    measurementTechnique: { type: GraphQLList(GraphQLString) },
    minValue: { type: GraphQLList(GraphQLFloat) },
    propertyID: { type: GraphQLList(GraphQLString) },
    unitCode: { type: GraphQLList(GraphQLString) },
    unitText: { type: GraphQLList(GraphQLString) },
    value: { type: GraphQLList(StructuredValue) },
    valueReference: { type: GraphQLList(valueReference) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const MonetaryAmount = new GraphQLObjectType({
  name: 'MonetaryAmount',
  fields: () => ({
    currency: { type: GraphQLList(GraphQLString) },
    maxValue: { type: GraphQLList(GraphQLFloat) },
    minValue: { type: GraphQLList(GraphQLFloat) },
    validFrom: { type: GraphQLList(GraphQLString) },
    validThrough: { type: GraphQLList(GraphQLString) },
    value: { type: GraphQLList(StructuredValue) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Comment = new GraphQLObjectType({
  name: 'Comment',
  fields: () => ({
    downvoteCount: { type: GraphQLList(GraphQLInt) },
    parentItem: { type: GraphQLList(Question) },
    upvoteCount: { type: GraphQLList(GraphQLInt) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Question = new GraphQLObjectType({
  name: 'Question',
  fields: () => ({
    acceptedAnswer: { type: GraphQLList(acceptedAnswer) },
    answerCount: { type: GraphQLList(GraphQLInt) },
    downvoteCount: { type: GraphQLList(GraphQLInt) },
    suggestedAnswer: { type: GraphQLList(suggestedAnswer) },
    upvoteCount: { type: GraphQLList(GraphQLInt) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Answer = new GraphQLObjectType({
  name: 'Answer',
  fields: () => ({
    downvoteCount: { type: GraphQLList(GraphQLInt) },
    parentItem: { type: GraphQLList(Question) },
    upvoteCount: { type: GraphQLList(GraphQLInt) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Distance = new GraphQLObjectType({
  name: 'Distance',
  fields: () => ({
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Place = new GraphQLObjectType({
  name: 'Place',
  fields: () => ({
    additionalProperty: { type: GraphQLList(GraphQLString) },
    address: { type: GraphQLList(PostalAddress) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    amenityFeature: { type: GraphQLList(LocationFeatureSpecification) },
    branchCode: { type: GraphQLList(GraphQLString) },
    containedInPlace: { type: GraphQLList(Place) },
    containsPlace: { type: GraphQLList(Place) },
    event: { type: GraphQLList(Event) },
    faxNumber: { type: GraphQLList(GraphQLString) },
    geo: { type: GraphQLList(geo) },
    geoContains: { type: GraphQLList(geoContains) },
    geoCoveredBy: { type: GraphQLList(geoCoveredBy) },
    geoCovers: { type: GraphQLList(geoCovers) },
    geoCrosses: { type: GraphQLList(geoCrosses) },
    geoDisjoint: { type: GraphQLList(geoDisjoint) },
    geoEquals: { type: GraphQLList(geoEquals) },
    geoIntersects: { type: GraphQLList(geoIntersects) },
    geoOverlaps: { type: GraphQLList(geoOverlaps) },
    geoTouches: { type: GraphQLList(geoTouches) },
    geoWithin: { type: GraphQLList(geoWithin) },
    globalLocationNumber: { type: GraphQLList(GraphQLString) },
    hasMap: { type: GraphQLList(Map) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isicV4: { type: GraphQLList(GraphQLString) },
    logo: { type: GraphQLList(ImageObject) },
    maximumAttendeeCapacity: { type: GraphQLList(GraphQLInt) },
    openingHoursSpecification: { type: GraphQLList(OpeningHoursSpecification) },
    photo: { type: GraphQLList(photo) },
    publicAccess: { type: GraphQLList(GraphQLBoolean) },
    review: { type: GraphQLList(Review) },
    slogan: { type: GraphQLList(GraphQLString) },
    smokingAllowed: { type: GraphQLList(GraphQLBoolean) },
    specialOpeningHoursSpecification: { type: GraphQLList(OpeningHoursSpecification) },
    telephone: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const EducationalOrganization = new GraphQLObjectType({
  name: 'EducationalOrganization',
  fields: () => ({
    alumni: { type: GraphQLList(Person) },
    actionableFeedbackPolicy: { type: GraphQLList(CreativeWork) },
    address: { type: GraphQLList(PostalAddress) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alumni: { type: GraphQLList(Person) },
    areaServed: { type: GraphQLList(areaServed) },
    award: { type: GraphQLList(GraphQLString) },
    brand: { type: GraphQLList(brand) },
    contactPoint: { type: GraphQLList(ContactPoint) },
    correctionsPolicy: { type: GraphQLList(CreativeWork) },
    department: { type: GraphQLList(Organization) },
    dissolutionDate: { type: GraphQLList(GraphQLString) },
    diversityPolicy: { type: GraphQLList(CreativeWork) },
    diversityStaffingReport: { type: GraphQLList(Article) },
    duns: { type: GraphQLList(GraphQLString) },
    email: { type: GraphQLList(GraphQLString) },
    employee: { type: GraphQLList(Person) },
    ethicsPolicy: { type: GraphQLList(CreativeWork) },
    event: { type: GraphQLList(Event) },
    faxNumber: { type: GraphQLList(GraphQLString) },
    founder: { type: GraphQLList(Person) },
    foundingDate: { type: GraphQLList(GraphQLString) },
    foundingLocation: { type: GraphQLList(Place) },
    funder: { type: GraphQLList(funder) },
    globalLocationNumber: { type: GraphQLList(GraphQLString) },
    hasOfferCatalog: { type: GraphQLList(OfferCatalog) },
    hasPOS: { type: GraphQLList(Place) },
    isicV4: { type: GraphQLList(GraphQLString) },
    knowsAbout: { type: GraphQLList(Thing) },
    knowsLanguage: { type: GraphQLList(Language) },
    legalName: { type: GraphQLList(GraphQLString) },
    leiCode: { type: GraphQLList(GraphQLString) },
    location: { type: GraphQLList(location) },
    logo: { type: GraphQLList(ImageObject) },
    makesOffer: { type: GraphQLList(Offer) },
    member: { type: GraphQLList(member) },
    memberOf: { type: GraphQLList(memberOf) },
    naics: { type: GraphQLList(GraphQLString) },
    numberOfEmployees: { type: GraphQLList(QuantitativeValue) },
    ownershipFundingInfo: { type: GraphQLList(ownershipFundingInfo) },
    owns: { type: GraphQLList(owns) },
    parentOrganization: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    review: { type: GraphQLList(Review) },
    seeks: { type: GraphQLList(Demand) },
    slogan: { type: GraphQLList(GraphQLString) },
    sponsor: { type: GraphQLList(sponsor) },
    subOrganization: { type: GraphQLList(Organization) },
    taxID: { type: GraphQLList(GraphQLString) },
    telephone: { type: GraphQLList(GraphQLString) },
    unnamedSourcesPolicy: { type: GraphQLList(CreativeWork) },
    vatID: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const ListItem = new GraphQLObjectType({
  name: 'ListItem',
  fields: () => ({
    item: { type: GraphQLList(Thing) },
    nextItem: { type: GraphQLList(ListItem) },
    position: { type: GraphQLList(GraphQLString) },
    previousItem: { type: GraphQLList(ListItem) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const OwnershipInfo = new GraphQLObjectType({
  name: 'OwnershipInfo',
  fields: () => ({
    acquiredFrom: { type: GraphQLList(acquiredFrom) },
    ownedFrom: { type: GraphQLList(GraphQLString) },
    ownedThrough: { type: GraphQLList(GraphQLString) },
    typeOfGood: { type: GraphQLList(typeOfGood) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Article = new GraphQLObjectType({
  name: 'Article',
  fields: () => ({
    articleBody: { type: GraphQLList(GraphQLString) },
    articleSection: { type: GraphQLList(GraphQLString) },
    backstory: { type: GraphQLList(CreativeWork) },
    pageEnd: { type: GraphQLList(GraphQLString) },
    pageStart: { type: GraphQLList(GraphQLString) },
    pagination: { type: GraphQLList(GraphQLString) },
    speakable: { type: GraphQLList(SpeakableSpecification) },
    wordCount: { type: GraphQLList(GraphQLInt) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Country = new GraphQLObjectType({
  name: 'Country',
  fields: () => ({
    additionalProperty: { type: GraphQLList(GraphQLString) },
    address: { type: GraphQLList(PostalAddress) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    amenityFeature: { type: GraphQLList(LocationFeatureSpecification) },
    branchCode: { type: GraphQLList(GraphQLString) },
    containedInPlace: { type: GraphQLList(Place) },
    containsPlace: { type: GraphQLList(Place) },
    event: { type: GraphQLList(Event) },
    faxNumber: { type: GraphQLList(GraphQLString) },
    geo: { type: GraphQLList(geo) },
    geoContains: { type: GraphQLList(geoContains) },
    geoCoveredBy: { type: GraphQLList(geoCoveredBy) },
    geoCovers: { type: GraphQLList(geoCovers) },
    geoCrosses: { type: GraphQLList(geoCrosses) },
    geoDisjoint: { type: GraphQLList(geoDisjoint) },
    geoEquals: { type: GraphQLList(geoEquals) },
    geoIntersects: { type: GraphQLList(geoIntersects) },
    geoOverlaps: { type: GraphQLList(geoOverlaps) },
    geoTouches: { type: GraphQLList(geoTouches) },
    geoWithin: { type: GraphQLList(geoWithin) },
    globalLocationNumber: { type: GraphQLList(GraphQLString) },
    hasMap: { type: GraphQLList(Map) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isicV4: { type: GraphQLList(GraphQLString) },
    logo: { type: GraphQLList(ImageObject) },
    maximumAttendeeCapacity: { type: GraphQLList(GraphQLInt) },
    openingHoursSpecification: { type: GraphQLList(OpeningHoursSpecification) },
    photo: { type: GraphQLList(photo) },
    publicAccess: { type: GraphQLList(GraphQLBoolean) },
    review: { type: GraphQLList(Review) },
    slogan: { type: GraphQLList(GraphQLString) },
    smokingAllowed: { type: GraphQLList(GraphQLBoolean) },
    specialOpeningHoursSpecification: { type: GraphQLList(OpeningHoursSpecification) },
    telephone: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const MusicRecording = new GraphQLObjectType({
  name: 'MusicRecording',
  fields: () => ({
    byArtist: { type: GraphQLList(byArtist) },
    duration: { type: GraphQLList(Duration) },
    inAlbum: { type: GraphQLList(MusicAlbum) },
    inPlaylist: { type: GraphQLList(MusicPlaylist) },
    isrcCode: { type: GraphQLList(GraphQLString) },
    recordingOf: { type: GraphQLList(MusicComposition) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const MusicPlaylist = new GraphQLObjectType({
  name: 'MusicPlaylist',
  fields: () => ({
    numTracks: { type: GraphQLList(GraphQLInt) },
    track: { type: GraphQLList(track) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const VideoObject = new GraphQLObjectType({
  name: 'VideoObject',
  fields: () => ({
    actor: { type: GraphQLList(Person) },
    caption: { type: GraphQLList(MediaObject) },
    director: { type: GraphQLList(Person) },
    musicBy: { type: GraphQLList(musicBy) },
    thumbnail: { type: GraphQLList(ImageObject) },
    transcript: { type: GraphQLList(GraphQLString) },
    videoFrameSize: { type: GraphQLList(GraphQLString) },
    videoQuality: { type: GraphQLList(GraphQLString) },
    associatedArticle: { type: GraphQLList(NewsArticle) },
    bitrate: { type: GraphQLList(GraphQLString) },
    contentSize: { type: GraphQLList(GraphQLString) },
    contentUrl: { type: GraphQLList(GraphQLString) },
    duration: { type: GraphQLList(Duration) },
    embedUrl: { type: GraphQLList(GraphQLString) },
    encodesCreativeWork: { type: GraphQLList(CreativeWork) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    endTime: { type: GraphQLList(GraphQLString) },
    height: { type: GraphQLList(height) },
    playerType: { type: GraphQLList(GraphQLString) },
    productionCompany: { type: GraphQLList(Organization) },
    regionsAllowed: { type: GraphQLList(Place) },
    requiresSubscription: { type: GraphQLList(MediaSubscription) },
    startTime: { type: GraphQLList(GraphQLString) },
    uploadDate: { type: GraphQLList(GraphQLString) },
    width: { type: GraphQLList(width) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const AudioObject = new GraphQLObjectType({
  name: 'AudioObject',
  fields: () => ({
    caption: { type: GraphQLList(MediaObject) },
    transcript: { type: GraphQLList(GraphQLString) },
    associatedArticle: { type: GraphQLList(NewsArticle) },
    bitrate: { type: GraphQLList(GraphQLString) },
    contentSize: { type: GraphQLList(GraphQLString) },
    contentUrl: { type: GraphQLList(GraphQLString) },
    duration: { type: GraphQLList(Duration) },
    embedUrl: { type: GraphQLList(GraphQLString) },
    encodesCreativeWork: { type: GraphQLList(CreativeWork) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    endTime: { type: GraphQLList(GraphQLString) },
    height: { type: GraphQLList(height) },
    playerType: { type: GraphQLList(GraphQLString) },
    productionCompany: { type: GraphQLList(Organization) },
    regionsAllowed: { type: GraphQLList(Place) },
    requiresSubscription: { type: GraphQLList(MediaSubscription) },
    startTime: { type: GraphQLList(GraphQLString) },
    uploadDate: { type: GraphQLList(GraphQLString) },
    width: { type: GraphQLList(width) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const WebSite = new GraphQLObjectType({
  name: 'WebSite',
  fields: () => ({
    issn: { type: GraphQLList(GraphQLString) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const OfferCatalog = new GraphQLObjectType({
  name: 'OfferCatalog',
  fields: () => ({
    itemListElement: { type: GraphQLList(itemListElement) },
    itemListOrder: { type: GraphQLList(ItemListOrderType) },
    numberOfItems: { type: GraphQLList(GraphQLInt) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const DataCatalog = new GraphQLObjectType({
  name: 'DataCatalog',
  fields: () => ({
    dataset: { type: GraphQLList(Dataset) },
    measurementTechnique: { type: GraphQLList(GraphQLString) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const WarrantyPromise = new GraphQLObjectType({
  name: 'WarrantyPromise',
  fields: () => ({
    durationOfWarranty: { type: GraphQLList(QuantitativeValue) },
    warrantyScope: { type: GraphQLList(WarrantyScope) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const WarrantyScope = new GraphQLObjectType({
  name: 'WarrantyScope',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const SoftwareApplication = new GraphQLObjectType({
  name: 'SoftwareApplication',
  fields: () => ({
    applicationCategory: { type: GraphQLList(GraphQLString) },
    applicationSubCategory: { type: GraphQLList(GraphQLString) },
    applicationSuite: { type: GraphQLList(GraphQLString) },
    availableOnDevice: { type: GraphQLList(GraphQLString) },
    countriesNotSupported: { type: GraphQLList(GraphQLString) },
    countriesSupported: { type: GraphQLList(GraphQLString) },
    downloadUrl: { type: GraphQLList(GraphQLString) },
    featureList: { type: GraphQLList(GraphQLString) },
    fileSize: { type: GraphQLList(GraphQLString) },
    installUrl: { type: GraphQLList(GraphQLString) },
    memoryRequirements: { type: GraphQLList(GraphQLString) },
    operatingSystem: { type: GraphQLList(GraphQLString) },
    permissions: { type: GraphQLList(GraphQLString) },
    processorRequirements: { type: GraphQLList(GraphQLString) },
    releaseNotes: { type: GraphQLList(GraphQLString) },
    screenshot: { type: GraphQLList(ImageObject) },
    softwareAddOn: { type: GraphQLList(SoftwareApplication) },
    softwareHelp: { type: GraphQLList(CreativeWork) },
    softwareRequirements: { type: GraphQLList(GraphQLString) },
    softwareVersion: { type: GraphQLList(GraphQLString) },
    storageRequirements: { type: GraphQLList(GraphQLString) },
    supportingData: { type: GraphQLList(DataFeed) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const DataFeed = new GraphQLObjectType({
  name: 'DataFeed',
  fields: () => ({
    dataFeedElement: { type: GraphQLList(dataFeedElement) },
    distribution: { type: GraphQLList(DataDownload) },
    includedInDataCatalog: { type: GraphQLList(DataCatalog) },
    issn: { type: GraphQLList(GraphQLString) },
    measurementTechnique: { type: GraphQLList(GraphQLString) },
    variableMeasured: { type: GraphQLList(GraphQLString) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const DataFeedItem = new GraphQLObjectType({
  name: 'DataFeedItem',
  fields: () => ({
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateDeleted: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    item: { type: GraphQLList(Thing) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Language = new GraphQLObjectType({
  name: 'Language',
  fields: () => ({
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Property = new GraphQLObjectType({
  name: 'Property',
  fields: () => ({
    domainIncludes: { type: GraphQLList(Class) },
    inverseOf: { type: GraphQLList(Property) },
    rangeIncludes: { type: GraphQLList(Class) },
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const BusinessFunction = new GraphQLObjectType({
  name: 'BusinessFunction',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const NewsArticle = new GraphQLObjectType({
  name: 'NewsArticle',
  fields: () => ({
    dateline: { type: GraphQLList(GraphQLString) },
    printColumn: { type: GraphQLList(GraphQLString) },
    printEdition: { type: GraphQLList(GraphQLString) },
    printPage: { type: GraphQLList(GraphQLString) },
    printSection: { type: GraphQLList(GraphQLString) },
    articleBody: { type: GraphQLList(GraphQLString) },
    articleSection: { type: GraphQLList(GraphQLString) },
    backstory: { type: GraphQLList(CreativeWork) },
    pageEnd: { type: GraphQLList(GraphQLString) },
    pageStart: { type: GraphQLList(GraphQLString) },
    pagination: { type: GraphQLList(GraphQLString) },
    speakable: { type: GraphQLList(SpeakableSpecification) },
    wordCount: { type: GraphQLList(GraphQLInt) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const CorrectionComment = new GraphQLObjectType({
  name: 'CorrectionComment',
  fields: () => ({
    downvoteCount: { type: GraphQLList(GraphQLInt) },
    parentItem: { type: GraphQLList(Question) },
    upvoteCount: { type: GraphQLList(GraphQLInt) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Organization = new GraphQLObjectType({
  name: 'Organization',
  fields: () => ({
    actionableFeedbackPolicy: { type: GraphQLList(CreativeWork) },
    address: { type: GraphQLList(PostalAddress) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alumni: { type: GraphQLList(Person) },
    areaServed: { type: GraphQLList(areaServed) },
    award: { type: GraphQLList(GraphQLString) },
    brand: { type: GraphQLList(brand) },
    contactPoint: { type: GraphQLList(ContactPoint) },
    correctionsPolicy: { type: GraphQLList(CreativeWork) },
    department: { type: GraphQLList(Organization) },
    dissolutionDate: { type: GraphQLList(GraphQLString) },
    diversityPolicy: { type: GraphQLList(CreativeWork) },
    diversityStaffingReport: { type: GraphQLList(Article) },
    duns: { type: GraphQLList(GraphQLString) },
    email: { type: GraphQLList(GraphQLString) },
    employee: { type: GraphQLList(Person) },
    ethicsPolicy: { type: GraphQLList(CreativeWork) },
    event: { type: GraphQLList(Event) },
    faxNumber: { type: GraphQLList(GraphQLString) },
    founder: { type: GraphQLList(Person) },
    foundingDate: { type: GraphQLList(GraphQLString) },
    foundingLocation: { type: GraphQLList(Place) },
    funder: { type: GraphQLList(funder) },
    globalLocationNumber: { type: GraphQLList(GraphQLString) },
    hasOfferCatalog: { type: GraphQLList(OfferCatalog) },
    hasPOS: { type: GraphQLList(Place) },
    isicV4: { type: GraphQLList(GraphQLString) },
    knowsAbout: { type: GraphQLList(Thing) },
    knowsLanguage: { type: GraphQLList(Language) },
    legalName: { type: GraphQLList(GraphQLString) },
    leiCode: { type: GraphQLList(GraphQLString) },
    location: { type: GraphQLList(location) },
    logo: { type: GraphQLList(ImageObject) },
    makesOffer: { type: GraphQLList(Offer) },
    member: { type: GraphQLList(member) },
    memberOf: { type: GraphQLList(memberOf) },
    naics: { type: GraphQLList(GraphQLString) },
    numberOfEmployees: { type: GraphQLList(QuantitativeValue) },
    ownershipFundingInfo: { type: GraphQLList(ownershipFundingInfo) },
    owns: { type: GraphQLList(owns) },
    parentOrganization: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    review: { type: GraphQLList(Review) },
    seeks: { type: GraphQLList(Demand) },
    slogan: { type: GraphQLList(GraphQLString) },
    sponsor: { type: GraphQLList(sponsor) },
    subOrganization: { type: GraphQLList(Organization) },
    taxID: { type: GraphQLList(GraphQLString) },
    telephone: { type: GraphQLList(GraphQLString) },
    unnamedSourcesPolicy: { type: GraphQLList(CreativeWork) },
    vatID: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const LoanOrCredit = new GraphQLObjectType({
  name: 'LoanOrCredit',
  fields: () => ({
    amount: { type: GraphQLList(MonetaryAmount) },
    currency: { type: GraphQLList(GraphQLString) },
    gracePeriod: { type: GraphQLList(Duration) },
    loanRepaymentForm: { type: GraphQLList(RepaymentSpecification) },
    loanTerm: { type: GraphQLList(QuantitativeValue) },
    loanType: { type: GraphQLList(GraphQLString) },
    recourseLoan: { type: GraphQLList(GraphQLBoolean) },
    renegotiableLoan: { type: GraphQLList(GraphQLBoolean) },
    requiredCollateral: { type: GraphQLList(Thing) },
    annualPercentageRate: { type: GraphQLList(QuantitativeValue) },
    feesAndCommissionsSpecification: { type: GraphQLList(GraphQLString) },
    interestRate: { type: GraphQLList(QuantitativeValue) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    areaServed: { type: GraphQLList(areaServed) },
    audience: { type: GraphQLList(Audience) },
    availableChannel: { type: GraphQLList(ServiceChannel) },
    award: { type: GraphQLList(GraphQLString) },
    brand: { type: GraphQLList(brand) },
    broker: { type: GraphQLList(broker) },
    category: { type: GraphQLList(category) },
    hasOfferCatalog: { type: GraphQLList(OfferCatalog) },
    hoursAvailable: { type: GraphQLList(OpeningHoursSpecification) },
    isRelatedTo: { type: GraphQLList(isRelatedTo) },
    isSimilarTo: { type: GraphQLList(isSimilarTo) },
    logo: { type: GraphQLList(ImageObject) },
    offers: { type: GraphQLList(Offer) },
    provider: { type: GraphQLList(provider) },
    providerMobility: { type: GraphQLList(GraphQLString) },
    review: { type: GraphQLList(Review) },
    serviceOutput: { type: GraphQLList(Thing) },
    serviceType: { type: GraphQLList(GraphQLString) },
    slogan: { type: GraphQLList(GraphQLString) },
    termsOfService: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const RepaymentSpecification = new GraphQLObjectType({
  name: 'RepaymentSpecification',
  fields: () => ({
    downPayment: { type: GraphQLList(MonetaryAmount) },
    earlyPrepaymentPenalty: { type: GraphQLList(MonetaryAmount) },
    loanPaymentAmount: { type: GraphQLList(MonetaryAmount) },
    loanPaymentFrequency: { type: GraphQLList(GraphQLFloat) },
    numberOfLoanPayments: { type: GraphQLList(GraphQLFloat) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const CreativeWork = new GraphQLObjectType({
  name: 'CreativeWork',
  fields: () => ({
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Audience = new GraphQLObjectType({
  name: 'Audience',
  fields: () => ({
    audienceType: { type: GraphQLList(GraphQLString) },
    geographicArea: { type: GraphQLList(AdministrativeArea) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Class = new GraphQLObjectType({
  name: 'Class',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const MusicAlbum = new GraphQLObjectType({
  name: 'MusicAlbum',
  fields: () => ({
    albumProductionType: { type: GraphQLList(MusicAlbumProductionType) },
    albumRelease: { type: GraphQLList(MusicRelease) },
    albumReleaseType: { type: GraphQLList(MusicAlbumReleaseType) },
    byArtist: { type: GraphQLList(byArtist) },
    numTracks: { type: GraphQLList(GraphQLInt) },
    track: { type: GraphQLList(track) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const MusicRelease = new GraphQLObjectType({
  name: 'MusicRelease',
  fields: () => ({
    catalogNumber: { type: GraphQLList(GraphQLString) },
    creditedTo: { type: GraphQLList(creditedTo) },
    duration: { type: GraphQLList(Duration) },
    musicReleaseFormat: { type: GraphQLList(MusicReleaseFormatType) },
    recordLabel: { type: GraphQLList(Organization) },
    releaseOf: { type: GraphQLList(MusicAlbum) },
    numTracks: { type: GraphQLList(GraphQLInt) },
    track: { type: GraphQLList(track) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const MusicAlbumProductionType = new GraphQLObjectType({
  name: 'MusicAlbumProductionType',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const ItemListOrderType = new GraphQLObjectType({
  name: 'ItemListOrderType',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const MediaSubscription = new GraphQLObjectType({
  name: 'MediaSubscription',
  fields: () => ({
    authenticator: { type: GraphQLList(Organization) },
    expectsAcceptanceOf: { type: GraphQLList(Offer) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Action = new GraphQLObjectType({
  name: 'Action',
  fields: () => ({
    actionStatus: { type: GraphQLList(ActionStatusType) },
    agent: { type: GraphQLList(agent) },
    endTime: { type: GraphQLList(GraphQLString) },
    error: { type: GraphQLList(Thing) },
    instrument: { type: GraphQLList(Thing) },
    location: { type: GraphQLList(location) },
    object: { type: GraphQLList(Thing) },
    participant: { type: GraphQLList(participant) },
    result: { type: GraphQLList(Thing) },
    startTime: { type: GraphQLList(GraphQLString) },
    target: { type: GraphQLList(EntryPoint) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const EntryPoint = new GraphQLObjectType({
  name: 'EntryPoint',
  fields: () => ({
    actionApplication: { type: GraphQLList(SoftwareApplication) },
    actionPlatform: { type: GraphQLList(GraphQLString) },
    contentType: { type: GraphQLList(GraphQLString) },
    encodingType: { type: GraphQLList(GraphQLString) },
    httpMethod: { type: GraphQLList(GraphQLString) },
    urlTemplate: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Map = new GraphQLObjectType({
  name: 'Map',
  fields: () => ({
    mapType: { type: GraphQLList(MapCategoryType) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const MusicComposition = new GraphQLObjectType({
  name: 'MusicComposition',
  fields: () => ({
    composer: { type: GraphQLList(composer) },
    firstPerformance: { type: GraphQLList(Event) },
    includedComposition: { type: GraphQLList(MusicComposition) },
    iswcCode: { type: GraphQLList(GraphQLString) },
    lyricist: { type: GraphQLList(Person) },
    lyrics: { type: GraphQLList(CreativeWork) },
    musicArrangement: { type: GraphQLList(MusicComposition) },
    musicCompositionForm: { type: GraphQLList(GraphQLString) },
    musicalKey: { type: GraphQLList(GraphQLString) },
    recordedAs: { type: GraphQLList(MusicRecording) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const MapCategoryType = new GraphQLObjectType({
  name: 'MapCategoryType',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const AggregateRating = new GraphQLObjectType({
  name: 'AggregateRating',
  fields: () => ({
    itemReviewed: { type: GraphQLList(Thing) },
    ratingCount: { type: GraphQLList(GraphQLInt) },
    reviewCount: { type: GraphQLList(GraphQLInt) },
    author: { type: GraphQLList(author) },
    bestRating: { type: GraphQLList(GraphQLString) },
    ratingValue: { type: GraphQLList(GraphQLString) },
    reviewAspect: { type: GraphQLList(GraphQLString) },
    worstRating: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const MusicAlbumReleaseType = new GraphQLObjectType({
  name: 'MusicAlbumReleaseType',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const ServiceChannel = new GraphQLObjectType({
  name: 'ServiceChannel',
  fields: () => ({
    availableLanguage: { type: GraphQLList(Language) },
    processingTime: { type: GraphQLList(Duration) },
    providesService: { type: GraphQLList(Service) },
    serviceLocation: { type: GraphQLList(Place) },
    servicePhone: { type: GraphQLList(ContactPoint) },
    servicePostalAddress: { type: GraphQLList(PostalAddress) },
    serviceSmsNumber: { type: GraphQLList(ContactPoint) },
    serviceUrl: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const PostalAddress = new GraphQLObjectType({
  name: 'PostalAddress',
  fields: () => ({
    addressCountry: { type: GraphQLList(Country) },
    addressLocality: { type: GraphQLList(GraphQLString) },
    addressRegion: { type: GraphQLList(GraphQLString) },
    postOfficeBoxNumber: { type: GraphQLList(GraphQLString) },
    postalCode: { type: GraphQLList(GraphQLString) },
    streetAddress: { type: GraphQLList(GraphQLString) },
    areaServed: { type: GraphQLList(areaServed) },
    availableLanguage: { type: GraphQLList(Language) },
    contactOption: { type: GraphQLList(ContactPointOption) },
    contactType: { type: GraphQLList(GraphQLString) },
    email: { type: GraphQLList(GraphQLString) },
    faxNumber: { type: GraphQLList(GraphQLString) },
    hoursAvailable: { type: GraphQLList(OpeningHoursSpecification) },
    productSupported: { type: GraphQLList(Product) },
    telephone: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const MusicReleaseFormatType = new GraphQLObjectType({
  name: 'MusicReleaseFormatType',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const MediaObject = new GraphQLObjectType({
  name: 'MediaObject',
  fields: () => ({
    associatedArticle: { type: GraphQLList(NewsArticle) },
    bitrate: { type: GraphQLList(GraphQLString) },
    contentSize: { type: GraphQLList(GraphQLString) },
    contentUrl: { type: GraphQLList(GraphQLString) },
    duration: { type: GraphQLList(Duration) },
    embedUrl: { type: GraphQLList(GraphQLString) },
    encodesCreativeWork: { type: GraphQLList(CreativeWork) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    endTime: { type: GraphQLList(GraphQLString) },
    height: { type: GraphQLList(height) },
    playerType: { type: GraphQLList(GraphQLString) },
    productionCompany: { type: GraphQLList(Organization) },
    regionsAllowed: { type: GraphQLList(Place) },
    requiresSubscription: { type: GraphQLList(MediaSubscription) },
    startTime: { type: GraphQLList(GraphQLString) },
    uploadDate: { type: GraphQLList(GraphQLString) },
    width: { type: GraphQLList(width) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const MonetaryAmountDistribution = new GraphQLObjectType({
  name: 'MonetaryAmountDistribution',
  fields: () => ({
    currency: { type: GraphQLList(GraphQLString) },
    duration: { type: GraphQLList(Duration) },
    median: { type: GraphQLList(GraphQLFloat) },
    percentile10: { type: GraphQLList(GraphQLFloat) },
    percentile25: { type: GraphQLList(GraphQLFloat) },
    percentile75: { type: GraphQLList(GraphQLFloat) },
    percentile90: { type: GraphQLList(GraphQLFloat) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const ContactPointOption = new GraphQLObjectType({
  name: 'ContactPointOption',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const EducationalOccupationalCredential = new GraphQLObjectType({
  name: 'EducationalOccupationalCredential',
  fields: () => ({
    competencyRequired: { type: GraphQLList(DefinedTerm) },
    credentialCategory: { type: GraphQLList(DefinedTerm) },
    educationalLevel: { type: GraphQLList(DefinedTerm) },
    recognizedBy: { type: GraphQLList(Organization) },
    validFor: { type: GraphQLList(Duration) },
    validIn: { type: GraphQLList(AdministrativeArea) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const ContactPoint = new GraphQLObjectType({
  name: 'ContactPoint',
  fields: () => ({
    areaServed: { type: GraphQLList(areaServed) },
    availableLanguage: { type: GraphQLList(Language) },
    contactOption: { type: GraphQLList(ContactPointOption) },
    contactType: { type: GraphQLList(GraphQLString) },
    email: { type: GraphQLList(GraphQLString) },
    faxNumber: { type: GraphQLList(GraphQLString) },
    hoursAvailable: { type: GraphQLList(OpeningHoursSpecification) },
    productSupported: { type: GraphQLList(Product) },
    telephone: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const PhysicalActivityCategory = new GraphQLObjectType({
  name: 'PhysicalActivityCategory',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const DayOfWeek = new GraphQLObjectType({
  name: 'DayOfWeek',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const Thing = new GraphQLObjectType({
  name: 'Thing',
  fields: () => ({
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const DefinedTerm = new GraphQLObjectType({
  name: 'DefinedTerm',
  fields: () => ({
    inDefinedTermSet: { type: GraphQLList(DefinedTermSet) },
    termCode: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const DefinedTermSet = new GraphQLObjectType({
  name: 'DefinedTermSet',
  fields: () => ({
    hasDefinedTerm: { type: GraphQLList(DefinedTerm) },
    about: { type: GraphQLList(Thing) },
    accessMode: { type: GraphQLList(GraphQLString) },
    accessModeSufficient: { type: GraphQLList(GraphQLString) },
    accessibilityAPI: { type: GraphQLList(GraphQLString) },
    accessibilityControl: { type: GraphQLList(GraphQLString) },
    accessibilityFeature: { type: GraphQLList(GraphQLString) },
    accessibilityHazard: { type: GraphQLList(GraphQLString) },
    accessibilitySummary: { type: GraphQLList(GraphQLString) },
    accountablePerson: { type: GraphQLList(Person) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    alternativeHeadline: { type: GraphQLList(GraphQLString) },
    associatedMedia: { type: GraphQLList(MediaObject) },
    audience: { type: GraphQLList(Audience) },
    audio: { type: GraphQLList(audio) },
    author: { type: GraphQLList(author) },
    award: { type: GraphQLList(GraphQLString) },
    character: { type: GraphQLList(Person) },
    citation: { type: GraphQLList(CreativeWork) },
    comment: { type: GraphQLList(Comment) },
    commentCount: { type: GraphQLList(GraphQLInt) },
    contentLocation: { type: GraphQLList(Place) },
    contentRating: { type: GraphQLList(Rating) },
    contentReferenceTime: { type: GraphQLList(GraphQLString) },
    contributor: { type: GraphQLList(contributor) },
    copyrightHolder: { type: GraphQLList(copyrightHolder) },
    copyrightYear: { type: GraphQLList(GraphQLFloat) },
    correction: { type: GraphQLList(CorrectionComment) },
    creator: { type: GraphQLList(creator) },
    dateCreated: { type: GraphQLList(GraphQLString) },
    dateModified: { type: GraphQLList(GraphQLString) },
    datePublished: { type: GraphQLList(GraphQLString) },
    discussionUrl: { type: GraphQLList(GraphQLString) },
    editor: { type: GraphQLList(Person) },
    educationalAlignment: { type: GraphQLList(AlignmentObject) },
    educationalUse: { type: GraphQLList(GraphQLString) },
    encoding: { type: GraphQLList(MediaObject) },
    encodingFormat: { type: GraphQLList(GraphQLString) },
    exampleOfWork: { type: GraphQLList(CreativeWork) },
    expires: { type: GraphQLList(GraphQLString) },
    funder: { type: GraphQLList(funder) },
    genre: { type: GraphQLList(GraphQLString) },
    hasPart: { type: GraphQLList(CreativeWork) },
    headline: { type: GraphQLList(GraphQLString) },
    inLanguage: { type: GraphQLList(Language) },
    interactionStatistic: { type: GraphQLList(InteractionCounter) },
    interactivityType: { type: GraphQLList(GraphQLString) },
    isAccessibleForFree: { type: GraphQLList(GraphQLBoolean) },
    isBasedOn: { type: GraphQLList(isBasedOn) },
    isFamilyFriendly: { type: GraphQLList(GraphQLBoolean) },
    isPartOf: { type: GraphQLList(CreativeWork) },
    keywords: { type: GraphQLList(GraphQLString) },
    learningResourceType: { type: GraphQLList(GraphQLString) },
    license: { type: GraphQLList(CreativeWork) },
    locationCreated: { type: GraphQLList(Place) },
    mainEntity: { type: GraphQLList(Thing) },
    material: { type: GraphQLList(Product) },
    materialExtent: { type: GraphQLList(QuantitativeValue) },
    mentions: { type: GraphQLList(Thing) },
    offers: { type: GraphQLList(Offer) },
    position: { type: GraphQLList(GraphQLString) },
    producer: { type: GraphQLList(producer) },
    provider: { type: GraphQLList(provider) },
    publication: { type: GraphQLList(PublicationEvent) },
    publisher: { type: GraphQLList(publisher) },
    publisherImprint: { type: GraphQLList(Organization) },
    publishingPrinciples: { type: GraphQLList(CreativeWork) },
    recordedAt: { type: GraphQLList(Event) },
    releasedEvent: { type: GraphQLList(PublicationEvent) },
    review: { type: GraphQLList(Review) },
    schemaVersion: { type: GraphQLList(GraphQLString) },
    sdDatePublished: { type: GraphQLList(GraphQLString) },
    sdLicense: { type: GraphQLList(CreativeWork) },
    sdPublisher: { type: GraphQLList(sdPublisher) },
    sourceOrganization: { type: GraphQLList(Organization) },
    spatial: { type: GraphQLList(Place) },
    spatialCoverage: { type: GraphQLList(Place) },
    sponsor: { type: GraphQLList(sponsor) },
    temporal: { type: GraphQLList(GraphQLString) },
    temporalCoverage: { type: GraphQLList(GraphQLString) },
    text: { type: GraphQLList(GraphQLString) },
    thumbnailUrl: { type: GraphQLList(GraphQLString) },
    timeRequired: { type: GraphQLList(Duration) },
    translationOfWork: { type: GraphQLList(CreativeWork) },
    translator: { type: GraphQLList(translator) },
    typicalAgeRange: { type: GraphQLList(GraphQLString) },
    version: { type: GraphQLList(GraphQLString) },
    video: { type: GraphQLList(video) },
    workExample: { type: GraphQLList(CreativeWork) },
    workTranslation: { type: GraphQLList(CreativeWork) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const ProgramMembership = new GraphQLObjectType({
  name: 'ProgramMembership',
  fields: () => ({
    hostingOrganization: { type: GraphQLList(Organization) },
    member: { type: GraphQLList(member) },
    membershipNumber: { type: GraphQLList(GraphQLString) },
    membershipPointsEarned: { type: GraphQLList(QuantitativeValue) },
    programName: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const ItemAvailability = new GraphQLObjectType({
  name: 'ItemAvailability',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const BroadcastService = new GraphQLObjectType({
  name: 'BroadcastService',
  fields: () => ({
    broadcastAffiliateOf: { type: GraphQLList(Organization) },
    broadcastDisplayName: { type: GraphQLList(GraphQLString) },
    broadcastFrequency: { type: GraphQLList(BroadcastFrequencySpecification) },
    broadcastTimezone: { type: GraphQLList(GraphQLString) },
    broadcaster: { type: GraphQLList(Organization) },
    hasBroadcastChannel: { type: GraphQLList(BroadcastChannel) },
    parentService: { type: GraphQLList(BroadcastService) },
    videoFormat: { type: GraphQLList(GraphQLString) },
    aggregateRating: { type: GraphQLList(AggregateRating) },
    areaServed: { type: GraphQLList(areaServed) },
    audience: { type: GraphQLList(Audience) },
    availableChannel: { type: GraphQLList(ServiceChannel) },
    award: { type: GraphQLList(GraphQLString) },
    brand: { type: GraphQLList(brand) },
    broker: { type: GraphQLList(broker) },
    category: { type: GraphQLList(category) },
    hasOfferCatalog: { type: GraphQLList(OfferCatalog) },
    hoursAvailable: { type: GraphQLList(OpeningHoursSpecification) },
    isRelatedTo: { type: GraphQLList(isRelatedTo) },
    isSimilarTo: { type: GraphQLList(isSimilarTo) },
    logo: { type: GraphQLList(ImageObject) },
    offers: { type: GraphQLList(Offer) },
    provider: { type: GraphQLList(provider) },
    providerMobility: { type: GraphQLList(GraphQLString) },
    review: { type: GraphQLList(Review) },
    serviceOutput: { type: GraphQLList(Thing) },
    serviceType: { type: GraphQLList(GraphQLString) },
    slogan: { type: GraphQLList(GraphQLString) },
    termsOfService: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const BroadcastChannel = new GraphQLObjectType({
  name: 'BroadcastChannel',
  fields: () => ({
    broadcastChannelId: { type: GraphQLList(GraphQLString) },
    broadcastFrequency: { type: GraphQLList(BroadcastFrequencySpecification) },
    broadcastServiceTier: { type: GraphQLList(GraphQLString) },
    genre: { type: GraphQLList(GraphQLString) },
    inBroadcastLineup: { type: GraphQLList(CableOrSatelliteService) },
    providesBroadcastService: { type: GraphQLList(BroadcastService) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const ActionStatusType = new GraphQLObjectType({
  name: 'ActionStatusType',
  fields: () => ({
    supersededBy: { type: GraphQLList(supersededBy) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const BroadcastFrequencySpecification = new GraphQLObjectType({
  name: 'BroadcastFrequencySpecification',
  fields: () => ({
    broadcastFrequencyValue: { type: GraphQLList(QuantitativeValue) },
    broadcastSignalModulation: { type: GraphQLList(QualitativeValue) },
    broadcastSubChannel: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const CableOrSatelliteService = new GraphQLObjectType({
  name: 'CableOrSatelliteService',
  fields: () => ({
    aggregateRating: { type: GraphQLList(AggregateRating) },
    areaServed: { type: GraphQLList(areaServed) },
    audience: { type: GraphQLList(Audience) },
    availableChannel: { type: GraphQLList(ServiceChannel) },
    award: { type: GraphQLList(GraphQLString) },
    brand: { type: GraphQLList(brand) },
    broker: { type: GraphQLList(broker) },
    category: { type: GraphQLList(category) },
    hasOfferCatalog: { type: GraphQLList(OfferCatalog) },
    hoursAvailable: { type: GraphQLList(OpeningHoursSpecification) },
    isRelatedTo: { type: GraphQLList(isRelatedTo) },
    isSimilarTo: { type: GraphQLList(isSimilarTo) },
    logo: { type: GraphQLList(ImageObject) },
    offers: { type: GraphQLList(Offer) },
    provider: { type: GraphQLList(provider) },
    providerMobility: { type: GraphQLList(GraphQLString) },
    review: { type: GraphQLList(Review) },
    serviceOutput: { type: GraphQLList(Thing) },
    serviceType: { type: GraphQLList(GraphQLString) },
    slogan: { type: GraphQLList(GraphQLString) },
    termsOfService: { type: GraphQLList(GraphQLString) },
    additionalType: { type: GraphQLList(GraphQLString) },
    alternateName: { type: GraphQLList(GraphQLString) },
    description: { type: GraphQLList(GraphQLString) },
    disambiguatingDescription: { type: GraphQLList(GraphQLString) },
    identifier: { type: GraphQLString },
    image: { type: GraphQLList(ImageObject) },
    mainEntityOfPage: { type: GraphQLList(CreativeWork) },
    name: { type: GraphQLList(GraphQLString) },
    potentialAction: { type: GraphQLList(Action) },
    sameAs: { type: GraphQLList(GraphQLString) },
    subjectOf: { type: GraphQLList(subjectOf) },
    url: { type: GraphQLList(GraphQLString) },
  })
});

const audio = new GraphQLUnionType({
  name: 'audio',
  types: [].concat(
    Clip,
    AudioObject,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const author = new GraphQLUnionType({
  name: 'author',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const contributor = new GraphQLUnionType({
  name: 'contributor',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const copyrightHolder = new GraphQLUnionType({
  name: 'copyrightHolder',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const creator = new GraphQLUnionType({
  name: 'creator',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const funder = new GraphQLUnionType({
  name: 'funder',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const isBasedOn = new GraphQLUnionType({
  name: 'isBasedOn',
  types: [].concat(
    Product,
    CreativeWork,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const producer = new GraphQLUnionType({
  name: 'producer',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const provider = new GraphQLUnionType({
  name: 'provider',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const publisher = new GraphQLUnionType({
  name: 'publisher',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const sdPublisher = new GraphQLUnionType({
  name: 'sdPublisher',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const sponsor = new GraphQLUnionType({
  name: 'sponsor',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const translator = new GraphQLUnionType({
  name: 'translator',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const video = new GraphQLUnionType({
  name: 'video',
  types: [].concat(
    Clip,
    VideoObject,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const subjectOf = new GraphQLUnionType({
  name: 'subjectOf',
  types: [].concat(
    CreativeWork,
    Event,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const valueReference = new GraphQLUnionType({
  name: 'valueReference',
  types: [].concat(
    StructuredValue,
    Enumeration,
    QuantitativeValue,
    QualitativeValue,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const alumniOf = new GraphQLUnionType({
  name: 'alumniOf',
  types: [].concat(
    Organization,
    EducationalOrganization,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const brand = new GraphQLUnionType({
  name: 'brand',
  types: [].concat(
    Brand,
    Organization,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const height = new GraphQLUnionType({
  name: 'height',
  types: [].concat(
    Distance,
    QuantitativeValue,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const homeLocation = new GraphQLUnionType({
  name: 'homeLocation',
  types: [].concat(
    Place,
    ContactPoint,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const memberOf = new GraphQLUnionType({
  name: 'memberOf',
  types: [].concat(
    Organization,
    ProgramMembership,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const netWorth = new GraphQLUnionType({
  name: 'netWorth',
  types: [].concat(
    PriceSpecification,
    MonetaryAmount,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const owns = new GraphQLUnionType({
  name: 'owns',
  types: [].concat(
    OwnershipInfo,
    Product,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const workLocation = new GraphQLUnionType({
  name: 'workLocation',
  types: [].concat(
    Place,
    ContactPoint,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const attendee = new GraphQLUnionType({
  name: 'attendee',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const composer = new GraphQLUnionType({
  name: 'composer',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const location = new GraphQLUnionType({
  name: 'location',
  types: [].concat(
    PostalAddress,
    Place,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const organizer = new GraphQLUnionType({
  name: 'organizer',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const performer = new GraphQLUnionType({
  name: 'performer',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const musicBy = new GraphQLUnionType({
  name: 'musicBy',
  types: [].concat(
    Person,
    MusicGroup,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const category = new GraphQLUnionType({
  name: 'category',
  types: [].concat(
    Thing,
    PhysicalActivityCategory,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const depth = new GraphQLUnionType({
  name: 'depth',
  types: [].concat(
    Distance,
    QuantitativeValue,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const isRelatedTo = new GraphQLUnionType({
  name: 'isRelatedTo',
  types: [].concat(
    Product,
    Service,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const isSimilarTo = new GraphQLUnionType({
  name: 'isSimilarTo',
  types: [].concat(
    Product,
    Service,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const width = new GraphQLUnionType({
  name: 'width',
  types: [].concat(
    Distance,
    QuantitativeValue,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const areaServed = new GraphQLUnionType({
  name: 'areaServed',
  types: [].concat(
    Place,
    AdministrativeArea,
    GeoShape,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const broker = new GraphQLUnionType({
  name: 'broker',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const supersededBy = new GraphQLUnionType({
  name: 'supersededBy',
  types: [].concat(
    Enumeration,
    Property,
    Class,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const publishedBy = new GraphQLUnionType({
  name: 'publishedBy',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const acceptedPaymentMethod = new GraphQLUnionType({
  name: 'acceptedPaymentMethod',
  types: [].concat(
    LoanOrCredit,
    PaymentMethod,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const eligibleRegion = new GraphQLUnionType({
  name: 'eligibleRegion',
  types: [].concat(
    Place,
    GeoShape,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const ineligibleRegion = new GraphQLUnionType({
  name: 'ineligibleRegion',
  types: [].concat(
    Place,
    GeoShape,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const itemOffered = new GraphQLUnionType({
  name: 'itemOffered',
  types: [].concat(
    Product,
    Service,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const offeredBy = new GraphQLUnionType({
  name: 'offeredBy',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const seller = new GraphQLUnionType({
  name: 'seller',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const typeOfGood = new GraphQLUnionType({
  name: 'typeOfGood',
  types: [].concat(
    Product,
    Service,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const interactionService = new GraphQLUnionType({
  name: 'interactionService',
  types: [].concat(
    WebSite,
    SoftwareApplication,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const geo = new GraphQLUnionType({
  name: 'geo',
  types: [].concat(
    GeoCoordinates,
    GeoShape,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const geoContains = new GraphQLUnionType({
  name: 'geoContains',
  types: [].concat(
    GeospatialGeometry,
    Place,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const geoCoveredBy = new GraphQLUnionType({
  name: 'geoCoveredBy',
  types: [].concat(
    GeospatialGeometry,
    Place,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const geoCovers = new GraphQLUnionType({
  name: 'geoCovers',
  types: [].concat(
    GeospatialGeometry,
    Place,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const geoCrosses = new GraphQLUnionType({
  name: 'geoCrosses',
  types: [].concat(
    GeospatialGeometry,
    Place,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const geoDisjoint = new GraphQLUnionType({
  name: 'geoDisjoint',
  types: [].concat(
    GeospatialGeometry,
    Place,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const geoEquals = new GraphQLUnionType({
  name: 'geoEquals',
  types: [].concat(
    GeospatialGeometry,
    Place,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const geoIntersects = new GraphQLUnionType({
  name: 'geoIntersects',
  types: [].concat(
    GeospatialGeometry,
    Place,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const geoOverlaps = new GraphQLUnionType({
  name: 'geoOverlaps',
  types: [].concat(
    GeospatialGeometry,
    Place,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const geoTouches = new GraphQLUnionType({
  name: 'geoTouches',
  types: [].concat(
    GeospatialGeometry,
    Place,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const geoWithin = new GraphQLUnionType({
  name: 'geoWithin',
  types: [].concat(
    GeospatialGeometry,
    Place,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const photo = new GraphQLUnionType({
  name: 'photo',
  types: [].concat(
    Photograph,
    ImageObject,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const track = new GraphQLUnionType({
  name: 'track',
  types: [].concat(
    ItemList,
    MusicRecording,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const member = new GraphQLUnionType({
  name: 'member',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const ownershipFundingInfo = new GraphQLUnionType({
  name: 'ownershipFundingInfo',
  types: [].concat(
    AboutPage,
    CreativeWork,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const itemListElement = new GraphQLUnionType({
  name: 'itemListElement',
  types: [].concat(
    Thing,
    ListItem,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const reviewedBy = new GraphQLUnionType({
  name: 'reviewedBy',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const acceptedAnswer = new GraphQLUnionType({
  name: 'acceptedAnswer',
  types: [].concat(
    Answer,
    ItemList,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const suggestedAnswer = new GraphQLUnionType({
  name: 'suggestedAnswer',
  types: [].concat(
    Answer,
    ItemList,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const acquiredFrom = new GraphQLUnionType({
  name: 'acquiredFrom',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const byArtist = new GraphQLUnionType({
  name: 'byArtist',
  types: [].concat(
    Person,
    MusicGroup,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const dataFeedElement = new GraphQLUnionType({
  name: 'dataFeedElement',
  types: [].concat(
    DataFeedItem,
    Thing,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const creditedTo = new GraphQLUnionType({
  name: 'creditedTo',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const agent = new GraphQLUnionType({
  name: 'agent',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

const participant = new GraphQLUnionType({
  name: 'participant',
  types: [].concat(
    Organization,
    Person,
  ),
  resolveType(value) {
    return value.__typename;
  }
});

module.exports = { TypeAndQuantityNode, MapCategoryType, DefinedTermSet, BroadcastFrequencySpecification, GeoShape, DataDownload, PriceSpecification, Brand, SpeakableSpecification, QualitativeValue, Duration, AlignmentObject, CreativeWorkSeries, EventStatusType, Occupation, LocationFeatureSpecification, MonetaryAmount, Comment, ActionStatusType, Place, Dataset, Country, AudioObject, OfferCatalog, WarrantyPromise, DataFeed, Property, MusicAlbumProductionType, CorrectionComment, Organization, Audience, MusicAlbumReleaseType, MusicReleaseFormatType, ContactPoint, PhysicalActivityCategory, Episode, CableOrSatelliteService, Review, ItemList, BreadcrumbList, ProductModel, InteractionCounter, AboutPage, MusicRelease, GeoCoordinates, MusicPlaylist, CreativeWorkSeason, Demand, OfferItemCondition, RepaymentSpecification, VideoObject, DataCatalog, MusicRecording, CreativeWork, MusicAlbum, Map, MusicComposition, AggregateRating, PostalAddress, PublicationEvent, QuantitativeValue, EntryPoint, Service, Event, Clip, OpeningHoursSpecification, ImageObject, GenderType, DataFeedItem, WebPageElement, BroadcastChannel, Offer, PaymentMethod, AdministrativeArea, Photograph, EducationalOrganization, WebSite, BusinessFunction, LoanOrCredit, ItemListOrderType, ServiceChannel, MediaObject, DayOfWeek, ProgramMembership, Product, Rating, BusinessEntityType, GeospatialGeometry, Question, DefinedTerm, Specialty, WarrantyScope, Answer, MusicGroup, StructuredValue, DeliveryMethod, Enumeration, Distance, ListItem, OwnershipInfo, Article, SoftwareApplication, Language, NewsArticle, Class, MediaSubscription, Action, MonetaryAmountDistribution, ContactPointOption, EducationalOccupationalCredential, Thing, Person, ItemAvailability, BroadcastService }; 
